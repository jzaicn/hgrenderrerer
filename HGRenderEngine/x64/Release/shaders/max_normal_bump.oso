OpenShadingLanguage 1.00
# Compiled by oslc 1.7.2
# options: 
shader max_normal_bump
param	float	tex_mult_spin	1		%read{137,137} %write{2147483647,-1}
param	float	tex_bump_spin	1		%read{9,9} %write{2147483647,-1}
param	float	tex_normal_map_alpha	1		%read{1,1} %write{2147483647,-1}
param	color	tex_normal_map	0.5 0.5 1		%read{0,34} %write{2147483647,-1}
param	float	tex_bump_map_alpha	1		%read{2147483647,-1} %write{2147483647,-1}
param	color	tex_bump_map	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	vector	tex_bump_map_bump	0 0 0		%read{9,9} %write{2147483647,-1}
param	int	tex_normal_map_isnull	0		%read{30,30} %write{2147483647,-1}
param	int	tex_bump_map_isnull	0		%read{5,5} %write{2147483647,-1}
param	int	tex_map1on	1		%read{27,27} %write{2147483647,-1}
param	int	tex_map2on	1		%read{2,2} %write{2147483647,-1}
param	int	tex_method	0		%read{83,132} %write{2147483647,-1}
param	int	tex_flipred	0		%read{10,50} %write{2147483647,-1}
param	int	tex_flipgreen	0		%read{15,55} %write{2147483647,-1}
param	int	tex_swap_rg	0		%read{20,60} %write{2147483647,-1}
oparam	color	result	0 0 0		%read{2147483647,-1} %write{0,0}
oparam	float	result_alpha	1		%read{2147483647,-1} %write{1,1}
oparam	vector	result_bump	0 0 0		%read{12,138} %write{9,138}
global	normal	N	%read{79,79} %write{2147483647,-1}
global	vector	dPdu	%read{88,88} %write{2147483647,-1}
global	vector	dPdv	%read{89,89} %write{2147483647,-1}
local	float	___369_t	%read{2147483647,-1} %write{22,22}
local	color	___370_s	%read{41,75} %write{34,66}
local	float	___370_texture_gamma	%read{37,37} %write{35,36}
local	float	___373_t	%read{2147483647,-1} %write{62,62}
local	vector	___370_p	%read{85,135} %write{70,134}
local	vector	___370_frontNormal	%read{82,135} %write{79,82}
local	vector	___375_tangent	%read{91,115} %write{88,88}
local	vector	___375_binormal	%read{94,118} %write{89,89}
local	vector	___375_tempNormal	%read{126,126} %write{101,125}
local	vector	___370_perturb	%read{136,136} %write{135,135}
const	int	$const1	1		%read{2,132} %write{2147483647,-1}
temp	int	$tmp1	%read{3,3} %write{2,2}
temp	int	$tmp2	%read{4,8} %write{3,7}
const	int	$const2	0		%read{3,114} %write{2147483647,-1}
temp	int	$tmp3	%read{6,6} %write{5,5}
temp	int	$tmp4	%read{7,7} %write{6,6}
temp	int	$tmp5	%read{11,11} %write{10,10}
const	float	$const3	1		%read{13,58} %write{2147483647,-1}
temp	float	$tmp6	%read{13,13} %write{12,12}
temp	float	$tmp7	%read{14,14} %write{13,13}
temp	int	$tmp8	%read{16,16} %write{15,15}
temp	float	$tmp9	%read{18,18} %write{17,17}
temp	float	$tmp10	%read{19,19} %write{18,18}
temp	int	$tmp11	%read{21,21} %write{20,20}
temp	float	$tmp12	%read{24,24} %write{23,23}
temp	float	$tmp13	%read{26,26} %write{25,25}
temp	int	$tmp14	%read{28,28} %write{27,27}
temp	int	$tmp15	%read{29,33} %write{28,32}
temp	int	$tmp16	%read{31,31} %write{30,30}
temp	int	$tmp17	%read{32,32} %write{31,31}
temp	int	$tmp18	%read{2147483647,-1} %write{36,36}
const	string	$const4	"options"		%read{36,36} %write{2147483647,-1}
const	string	$const5	"texture_gamma"		%read{36,36} %write{2147483647,-1}
temp	float	$tmp19	%read{39,48} %write{37,37}
const	string	$const6	"ei_degamma"		%read{38,38} %write{2147483647,-1}
temp	int	$tmp20	%read{40,40} %write{39,39}
temp	float	$tmp21	%read{43,43} %write{42,42}
temp	float	$tmp22	%read{42,42} %write{41,41}
temp	float	$tmp23	%read{46,46} %write{45,45}
temp	float	$tmp24	%read{45,45} %write{44,44}
temp	float	$tmp25	%read{49,49} %write{48,48}
const	int	$const7	2		%read{47,127} %write{2147483647,-1}
temp	float	$tmp26	%read{48,48} %write{47,47}
temp	int	$tmp27	%read{51,51} %write{50,50}
temp	float	$tmp28	%read{53,53} %write{52,52}
temp	float	$tmp29	%read{54,54} %write{53,53}
temp	int	$tmp30	%read{56,56} %write{55,55}
temp	float	$tmp31	%read{58,58} %write{57,57}
temp	float	$tmp32	%read{59,59} %write{58,58}
temp	int	$tmp33	%read{61,61} %write{60,60}
temp	float	$tmp34	%read{64,64} %write{63,63}
temp	float	$tmp35	%read{66,66} %write{65,65}
const	float	$const8	2		%read{69,77} %write{2147483647,-1}
temp	float	$tmp36	%read{68,68} %write{67,67}
const	float	$const9	0.5		%read{68,76} %write{2147483647,-1}
temp	float	$tmp37	%read{69,69} %write{68,68}
temp	float	$tmp38	%read{70,70} %write{69,69}
temp	float	$tmp39	%read{72,72} %write{71,71}
temp	float	$tmp40	%read{73,73} %write{72,72}
temp	float	$tmp41	%read{74,74} %write{73,73}
temp	float	$tmp42	%read{76,76} %write{75,75}
temp	float	$tmp43	%read{77,77} %write{76,76}
temp	float	$tmp44	%read{78,78} %write{77,77}
temp	int	$tmp45	%read{81,81} %write{80,80}
temp	int	$tmp46	%read{84,84} %write{83,83}
temp	float	$tmp47	%read{86,86} %write{85,85}
temp	float	$tmp48	%read{87,87} %write{86,86}
temp	float	$tmp49	%read{92,92} %write{90,90}
temp	float	$tmp50	%read{92,92} %write{91,91}
temp	float	$tmp51	%read{96,96} %write{92,92}
temp	float	$tmp52	%read{95,95} %write{93,93}
temp	float	$tmp53	%read{95,95} %write{94,94}
temp	float	$tmp54	%read{96,96} %write{95,95}
temp	float	$tmp55	%read{100,100} %write{96,96}
temp	float	$tmp56	%read{99,99} %write{97,97}
temp	float	$tmp57	%read{99,99} %write{98,98}
temp	float	$tmp58	%read{100,100} %write{99,99}
temp	float	$tmp59	%read{101,101} %write{100,100}
temp	float	$tmp60	%read{104,104} %write{102,102}
temp	float	$tmp61	%read{104,104} %write{103,103}
temp	float	$tmp62	%read{108,108} %write{104,104}
temp	float	$tmp63	%read{107,107} %write{105,105}
temp	float	$tmp64	%read{107,107} %write{106,106}
temp	float	$tmp65	%read{108,108} %write{107,107}
temp	float	$tmp66	%read{112,112} %write{108,108}
temp	float	$tmp67	%read{111,111} %write{109,109}
temp	float	$tmp68	%read{111,111} %write{110,110}
temp	float	$tmp69	%read{112,112} %write{111,111}
temp	float	$tmp70	%read{113,113} %write{112,112}
temp	float	$tmp71	%read{116,116} %write{114,114}
temp	float	$tmp72	%read{116,116} %write{115,115}
temp	float	$tmp73	%read{120,120} %write{116,116}
temp	float	$tmp74	%read{119,119} %write{117,117}
temp	float	$tmp75	%read{119,119} %write{118,118}
temp	float	$tmp76	%read{120,120} %write{119,119}
temp	float	$tmp77	%read{124,124} %write{120,120}
temp	float	$tmp78	%read{123,123} %write{121,121}
temp	float	$tmp79	%read{123,123} %write{122,122}
temp	float	$tmp80	%read{124,124} %write{123,123}
temp	float	$tmp81	%read{125,125} %write{124,124}
temp	int	$tmp82	%read{128,128} %write{127,127}
const	string	$const10	"camera"		%read{129,129} %write{2147483647,-1}
const	string	$const11	"world"		%read{129,134} %write{2147483647,-1}
const	int	$const12	3		%read{130,130} %write{2147483647,-1}
temp	int	$tmp83	%read{131,131} %write{130,130}
temp	int	$tmp84	%read{133,133} %write{132,132}
const	string	$const13	"object"		%read{134,134} %write{2147483647,-1}
temp	vector	$tmp85	%read{137,137} %write{136,136}
const	float	$const15	100		%read{136,136} %write{2147483647,-1}
temp	vector	$tmp86	%read{138,138} %write{137,137}
code ___main___
	assign		result tex_normal_map 	%filename{"E:/github/elaramax/Shaders/max_normal_bump.osl"} %line{46} %argrw{"wr"}
	assign		result_alpha tex_normal_map_alpha 	%line{47} %argrw{"wr"}
	eq		$tmp1 tex_map2on $const1 	%line{48} %argrw{"wrr"}
	neq		$tmp2 $tmp1 $const2 	%argrw{"wrr"}
	if		$tmp2 8 8 	%argrw{"r"}
	eq		$tmp3 tex_bump_map_isnull $const2 	%argrw{"wrr"}
	neq		$tmp4 $tmp3 $const2 	%argrw{"wrr"}
	assign		$tmp2 $tmp4 	%argrw{"wr"}
	if		$tmp2 27 27 	%argrw{"r"}
	mul		result_bump tex_bump_map_bump tex_bump_spin 	%line{50} %argrw{"wrr"}
	eq		$tmp5 tex_flipred $const1 	%line{51} %argrw{"wrr"}
	if		$tmp5 15 15 	%argrw{"r"}
	compref		$tmp6 result_bump $const2 	%line{53} %argrw{"wrr"}
	sub		$tmp7 $const3 $tmp6 	%argrw{"wrr"}
	compassign	result_bump $const2 $tmp7 	%argrw{"wrr"}
	eq		$tmp8 tex_flipgreen $const1 	%line{55} %argrw{"wrr"}
	if		$tmp8 20 20 	%argrw{"r"}
	compref		$tmp9 result_bump $const1 	%line{57} %argrw{"wrr"}
	sub		$tmp10 $const3 $tmp9 	%argrw{"wrr"}
	compassign	result_bump $const1 $tmp10 	%argrw{"wrr"}
	eq		$tmp11 tex_swap_rg $const1 	%line{59} %argrw{"wrr"}
	if		$tmp11 27 27 	%argrw{"r"}
	compref		___369_t result_bump $const2 	%line{61} %argrw{"wrr"}
	compref		$tmp12 result_bump $const1 	%line{62} %argrw{"wrr"}
	compassign	result_bump $const2 $tmp12 	%argrw{"wrr"}
	compref		$tmp13 result_bump $const2 	%line{63} %argrw{"wrr"}
	compassign	result_bump $const1 $tmp13 	%argrw{"wrr"}
	eq		$tmp14 tex_map1on $const1 	%line{66} %argrw{"wrr"}
	neq		$tmp15 $tmp14 $const2 	%argrw{"wrr"}
	if		$tmp15 33 33 	%argrw{"r"}
	eq		$tmp16 tex_normal_map_isnull $const2 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const2 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	if		$tmp15 139 139 	%argrw{"r"}
	assign		___370_s tex_normal_map 	%line{68} %argrw{"wr"}
	assign		___370_texture_gamma $const3 	%line{70} %argrw{"wr"}
	getattribute	$tmp18 $const4 $const5 ___370_texture_gamma 	%line{71} %argrw{"wrrw"}
	div		$tmp19 $const3 ___370_texture_gamma 	%line{72} %argrw{"wrr"}
	functioncall	$const6 50 	%argrw{"r"}
	neq		$tmp20 $tmp19 $const3 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{411} %argrw{"wrr"}
	if		$tmp20 50 50 	%argrw{"r"}
	compref		$tmp22 ___370_s $const2 	%line{413} %argrw{"wrr"}
	pow		$tmp21 $tmp22 $tmp19 	%argrw{"wrr"}
	compassign	___370_s $const2 $tmp21 	%argrw{"wrr"}
	compref		$tmp24 ___370_s $const1 	%line{414} %argrw{"wrr"}
	pow		$tmp23 $tmp24 $tmp19 	%argrw{"wrr"}
	compassign	___370_s $const1 $tmp23 	%argrw{"wrr"}
	compref		$tmp26 ___370_s $const7 	%line{415} %argrw{"wrr"}
	pow		$tmp25 $tmp26 $tmp19 	%argrw{"wrr"}
	compassign	___370_s $const7 $tmp25 	%argrw{"wrr"}
	eq		$tmp27 tex_flipred $const1 	%filename{"E:/github/elaramax/Shaders/max_normal_bump.osl"} %line{74} %argrw{"wrr"}
	if		$tmp27 55 55 	%argrw{"r"}
	compref		$tmp28 ___370_s $const2 	%line{76} %argrw{"wrr"}
	sub		$tmp29 $const3 $tmp28 	%argrw{"wrr"}
	compassign	___370_s $const2 $tmp29 	%argrw{"wrr"}
	eq		$tmp30 tex_flipgreen $const1 	%line{78} %argrw{"wrr"}
	if		$tmp30 60 60 	%argrw{"r"}
	compref		$tmp31 ___370_s $const1 	%line{80} %argrw{"wrr"}
	sub		$tmp32 $const3 $tmp31 	%argrw{"wrr"}
	compassign	___370_s $const1 $tmp32 	%argrw{"wrr"}
	eq		$tmp33 tex_swap_rg $const1 	%line{82} %argrw{"wrr"}
	if		$tmp33 67 67 	%argrw{"r"}
	compref		___373_t ___370_s $const2 	%line{84} %argrw{"wrr"}
	compref		$tmp34 ___370_s $const1 	%line{85} %argrw{"wrr"}
	compassign	___370_s $const2 $tmp34 	%argrw{"wrr"}
	compref		$tmp35 ___370_s $const2 	%line{86} %argrw{"wrr"}
	compassign	___370_s $const1 $tmp35 	%argrw{"wrr"}
	compref		$tmp36 ___370_s $const2 	%line{89} %argrw{"wrr"}
	sub		$tmp37 $tmp36 $const9 	%argrw{"wrr"}
	mul		$tmp38 $const8 $tmp37 	%argrw{"wrr"}
	compassign	___370_p $const2 $tmp38 	%argrw{"wrr"}
	compref		$tmp39 ___370_s $const1 	%line{90} %argrw{"wrr"}
	sub		$tmp40 $tmp39 $const9 	%argrw{"wrr"}
	mul		$tmp41 $const8 $tmp40 	%argrw{"wrr"}
	compassign	___370_p $const1 $tmp41 	%argrw{"wrr"}
	compref		$tmp42 ___370_s $const7 	%line{91} %argrw{"wrr"}
	sub		$tmp43 $tmp42 $const9 	%argrw{"wrr"}
	mul		$tmp44 $const8 $tmp43 	%argrw{"wrr"}
	compassign	___370_p $const7 $tmp44 	%argrw{"wrr"}
	assign		___370_frontNormal N 	%line{93} %argrw{"wr"}
	backfacing	$tmp45 	%line{94} %argrw{"w"}
	if		$tmp45 83 83 	%argrw{"r"}
	neg		___370_frontNormal ___370_frontNormal 	%line{96} %argrw{"wr"}
	eq		$tmp46 tex_method $const2 	%line{99} %argrw{"wrr"}
	if		$tmp46 127 135 	%argrw{"r"}
	compref		$tmp47 ___370_p $const1 	%line{101} %argrw{"wrr"}
	neg		$tmp48 $tmp47 	%argrw{"wr"}
	compassign	___370_p $const1 $tmp48 	%argrw{"wrr"}
	normalize	___375_tangent dPdu 	%line{102} %argrw{"wr"}
	normalize	___375_binormal dPdv 	%line{103} %argrw{"wr"}
	compref		$tmp49 ___370_p $const2 	%line{105} %argrw{"wrr"}
	compref		$tmp50 ___375_tangent $const2 	%argrw{"wrr"}
	mul		$tmp51 $tmp49 $tmp50 	%argrw{"wrr"}
	compref		$tmp52 ___370_p $const1 	%argrw{"wrr"}
	compref		$tmp53 ___375_binormal $const2 	%argrw{"wrr"}
	mul		$tmp54 $tmp52 $tmp53 	%argrw{"wrr"}
	add		$tmp55 $tmp51 $tmp54 	%argrw{"wrr"}
	compref		$tmp56 ___370_p $const7 	%argrw{"wrr"}
	compref		$tmp57 ___370_frontNormal $const2 	%argrw{"wrr"}
	mul		$tmp58 $tmp56 $tmp57 	%argrw{"wrr"}
	add		$tmp59 $tmp55 $tmp58 	%argrw{"wrr"}
	compassign	___375_tempNormal $const2 $tmp59 	%argrw{"wrr"}
	compref		$tmp60 ___370_p $const2 	%line{106} %argrw{"wrr"}
	compref		$tmp61 ___375_tangent $const1 	%argrw{"wrr"}
	mul		$tmp62 $tmp60 $tmp61 	%argrw{"wrr"}
	compref		$tmp63 ___370_p $const1 	%argrw{"wrr"}
	compref		$tmp64 ___375_binormal $const1 	%argrw{"wrr"}
	mul		$tmp65 $tmp63 $tmp64 	%argrw{"wrr"}
	add		$tmp66 $tmp62 $tmp65 	%argrw{"wrr"}
	compref		$tmp67 ___370_p $const7 	%argrw{"wrr"}
	compref		$tmp68 ___370_frontNormal $const1 	%argrw{"wrr"}
	mul		$tmp69 $tmp67 $tmp68 	%argrw{"wrr"}
	add		$tmp70 $tmp66 $tmp69 	%argrw{"wrr"}
	compassign	___375_tempNormal $const1 $tmp70 	%argrw{"wrr"}
	compref		$tmp71 ___370_p $const2 	%line{107} %argrw{"wrr"}
	compref		$tmp72 ___375_tangent $const7 	%argrw{"wrr"}
	mul		$tmp73 $tmp71 $tmp72 	%argrw{"wrr"}
	compref		$tmp74 ___370_p $const1 	%argrw{"wrr"}
	compref		$tmp75 ___375_binormal $const7 	%argrw{"wrr"}
	mul		$tmp76 $tmp74 $tmp75 	%argrw{"wrr"}
	add		$tmp77 $tmp73 $tmp76 	%argrw{"wrr"}
	compref		$tmp78 ___370_p $const7 	%argrw{"wrr"}
	compref		$tmp79 ___370_frontNormal $const7 	%argrw{"wrr"}
	mul		$tmp80 $tmp78 $tmp79 	%argrw{"wrr"}
	add		$tmp81 $tmp77 $tmp80 	%argrw{"wrr"}
	compassign	___375_tempNormal $const7 $tmp81 	%argrw{"wrr"}
	assign		___370_p ___375_tempNormal 	%line{108} %argrw{"wr"}
	eq		$tmp82 tex_method $const7 	%line{110} %argrw{"wrr"}
	if		$tmp82 130 135 	%argrw{"r"}
	transformv	___370_p $const10 $const11 ___370_p 	%line{112} %argrw{"wrrr"}
	eq		$tmp83 tex_method $const12 	%line{114} %argrw{"wrr"}
	if		$tmp83 132 135 	%argrw{"r"}
	eq		$tmp84 tex_method $const1 	%line{118} %argrw{"wrr"}
	if		$tmp84 135 135 	%argrw{"r"}
	transformv	___370_p $const13 $const11 ___370_p 	%line{120} %argrw{"wrrr"}
	sub		___370_perturb ___370_p ___370_frontNormal 	%line{123} %argrw{"wrr"}
	mul		$tmp85 $const15 ___370_perturb 	%line{124} %argrw{"wrr"}
	mul		$tmp86 $tmp85 tex_mult_spin 	%argrw{"wrr"}
	add		result_bump result_bump $tmp86 	%argrw{"wrr"}
	end
