OpenShadingLanguage 1.00
# Compiled by oslc 1.7.2
# options: 
shader max_noise
param	color	color1	0 0 0		%read{269,280} %write{2147483647,-1}
param	float	color1_alpha	1		%read{273,273} %write{2147483647,-1}
param	int	color1Enabled	0		%read{939,939} %write{2147483647,-1}
param	vector	color1_bump	0 0 0		%read{956,959} %write{2147483647,-1}
param	color	color2	1 1 1		%read{270,288} %write{2147483647,-1}
param	float	color2_alpha	1		%read{274,274} %write{2147483647,-1}
param	int	color2Enabled	0		%read{942,942} %write{2147483647,-1}
param	vector	color2_bump	0 0 0		%read{956,956} %write{2147483647,-1}
param	float	size	63.5		%read{1,39} %write{2147483647,-1} %derivs
param	float	phase	0		%read{89,848} %write{2147483647,-1}
param	float	levels	3		%read{51,744} %write{2147483647,-1}
param	float	thresholdLow	0		%read{187,906} %write{2147483647,-1}
param	float	thresholdHigh	1		%read{187,910} %write{2147483647,-1}
param	int	type	0		%read{72,809} %write{2147483647,-1}
param	int	filter	1		%read{28,726} %write{2147483647,-1}
param	float	avgAbsNs	-1		%read{139,806} %write{2147483647,-1}
param	float	avgValue	1		%read{67,931} %write{2147483647,-1}
param	point	coords	0 0 0		%read{0,0} %write{2147483647,-1} %derivs
oparam	color	result	0 0 0		%read{949,952} %write{271,271}
oparam	float	result_alpha	1		%read{2147483647,-1} %write{275,275}
oparam	vector	result_bump	0 0 0		%read{2147483647,-1} %write{959,961}
local	float	___306_f	%read{283,955} %write{282,954}
local	float	___366_al	%read{196,874} %write{192,859}
local	float	___366_ah	%read{204,874} %write{193,860}
local	float	___366_bl	%read{218,892} %write{194,861}
local	float	___366_bh	%read{200,892} %write{195,862}
local	float	___367_u	%read{209,881} %write{208,879}
local	float	___369_u	%read{227,903} %write{226,897}
local	float	___370_epsilon	%read{40,42} %write{27,27}
local	float	___371_m	%read{40,46} %write{39,42}
local	float	___371_l	%read{51,54} %write{45,45}
local	float	___371_smWidth	%read{47,50} %write{46,49}
local	float	___375_sum	%read{80,808} %write{75,807}
local	float	___375_l	%read{80,804} %write{79,801}
local	float	___375_f	%read{80,804} %write{76,801}
local	float	___375_ml	%read{80,801} %write{77,793}
local	float	___378_r	%read{122,806} %write{117,805}
local	float	___383_BLENDBAND	%read{64,928} %write{61,728}
local	float	___383_res	%read{196,933} %write{62,932}
local	float	___383_lev	%read{69,837} %write{63,738}
local	float	___386_sum	%read{157,852} %write{153,851}
local	float	___386_l	%read{157,849} %write{156,837}
local	float	___386_f	%read{157,850} %write{154,837}
local	float	___391_u	%read{262,930} %write{261,928}
local	point	p	%read{1,725} %write{0,1} %derivs
local	point	dp	%read{30,35} %write{9,25}
local	float	smw	%read{192,862} %write{50,56}
local	float	limlev	%read{63,926} %write{53,57}
local	float	d	%read{268,935} %write{67,266}
local	float	___392_a	%read{946,960} %write{283,283}
local	float	___392_b	%read{946,960} %write{291,291}
local	vector	___392_np	%read{938,961} %write{507,938}
local	float	___392_del	%read{294,936} %write{292,292}
temp	float	$tmp1	%read{8,8} %write{4,4}
temp	float	$tmp2	%read{4,4} %write{3,3}
const	int	$const1	0		%read{2,949} %write{2147483647,-1}
temp	float	$tmp3	%read{3,3} %write{2,2} %derivs
temp	float	$tmp4	%read{8,8} %write{7,7}
temp	float	$tmp5	%read{7,7} %write{6,6}
temp	float	$tmp6	%read{6,6} %write{5,5} %derivs
temp	float	$tmp7	%read{9,9} %write{8,8}
temp	float	$tmp8	%read{16,16} %write{12,12}
temp	float	$tmp9	%read{12,12} %write{11,11}
const	int	$const2	1		%read{10,950} %write{2147483647,-1}
temp	float	$tmp10	%read{11,11} %write{10,10} %derivs
temp	float	$tmp11	%read{16,16} %write{15,15}
temp	float	$tmp12	%read{15,15} %write{14,14}
temp	float	$tmp13	%read{14,14} %write{13,13} %derivs
temp	float	$tmp14	%read{17,17} %write{16,16}
temp	float	$tmp15	%read{24,24} %write{20,20}
temp	float	$tmp16	%read{20,20} %write{19,19}
const	int	$const3	2		%read{18,952} %write{2147483647,-1}
temp	float	$tmp17	%read{19,19} %write{18,18} %derivs
temp	float	$tmp18	%read{24,24} %write{23,23}
temp	float	$tmp19	%read{23,23} %write{22,22}
temp	float	$tmp20	%read{22,22} %write{21,21} %derivs
temp	float	$tmp21	%read{25,25} %write{24,24}
const	string	$const4	"LimitLevel"		%read{26,26} %write{2147483647,-1}
const	float	$const5	9.9999997e-006		%read{27,27} %write{2147483647,-1}
temp	int	$tmp22	%read{29,29} %write{28,28}
temp	float	$tmp23	%read{34,34} %write{31,31}
temp	float	$tmp24	%read{31,31} %write{30,30}
temp	float	$tmp25	%read{34,34} %write{33,33}
temp	float	$tmp26	%read{33,33} %write{32,32}
temp	float	$tmp27	%read{37,37} %write{34,34}
temp	float	$tmp28	%read{37,37} %write{36,36}
temp	float	$tmp29	%read{36,36} %write{35,35}
temp	float	$tmp30	%read{38,38} %write{37,37}
const	float	$const6	3		%read{38,896} %write{2147483647,-1}
temp	float	$tmp31	%read{39,39} %write{38,38}
temp	int	$tmp32	%read{41,41} %write{40,40}
temp	float	$tmp33	%read{45,45} %write{44,44}
const	float	$const7	1		%read{43,930} %write{2147483647,-1}
temp	float	$tmp34	%read{44,44} %write{43,43}
const	float	$const8	0.69314778		%read{45,45} %write{2147483647,-1}
const	float	$const9	0.2		%read{46,46} %write{2147483647,-1}
const	float	$const10	0.40000001		%read{47,49} %write{2147483647,-1}
temp	int	$tmp35	%read{48,48} %write{47,47}
temp	int	$tmp36	%read{52,52} %write{51,51}
const	float	$const11	0		%read{56,922} %write{2147483647,-1}
temp	float	$tmp37	%read{111,255} %write{59,59}
const	string	$const12	"NoiseFunction"		%read{60,727} %write{2147483647,-1}
const	float	$const13	4		%read{61,728} %write{2147483647,-1}
temp	float	$tmp38	%read{65,65} %write{64,64}
temp	int	$tmp39	%read{66,66} %write{65,65}
temp	int	$tmp40	%read{70,70} %write{69,69}
temp	int	$tmp41	%read{73,73} %write{72,72}
const	string	$const14	"Turb"		%read{74,741} %write{2147483647,-1}
temp	int	$tmp42	%read{78,95} %write{79,95}
temp	float	$tmp43	%read{80,95} %write{80,95}
temp	float	$tmp44	%read{80,95} %write{80,95}
temp	float	$tmp45	%read{80,95} %write{80,95}
temp	float	$tmp46	%read{80,95} %write{80,95}
temp	float	$tmp47	%read{80,95} %write{80,95}
temp	float	$tmp48	%read{80,95} %write{80,95}
temp	float	$tmp49	%read{80,95} %write{80,95}
temp	float	$tmp50	%read{80,95} %write{80,95}
const	string	$const15	"maxNoise4"		%read{87,846} %write{2147483647,-1}
const	string	$const16	"perlin"		%read{89,848} %write{2147483647,-1}
temp	point	$tmp51	%read{80,95} %write{80,95}
temp	float	$tmp52	%read{80,95} %write{80,95}
const	float	$const17	2		%read{93,895} %write{2147483647,-1}
temp	int	$tmp53	%read{97,97} %write{96,96}
temp	float	$tmp54	%read{108,108} %write{107,107}
temp	float	$tmp55	%read{107,107} %write{106,106}
temp	float	$tmp56	%read{99,99} %write{98,98}
temp	float	$tmp57	%read{105,105} %write{99,99}
temp	float	$tmp58	%read{101,101} %write{100,100}
temp	float	$tmp59	%read{105,105} %write{101,101}
temp	float	$tmp60	%read{103,103} %write{102,102}
temp	float	$tmp61	%read{105,105} %write{103,103}
temp	point	$tmp62	%read{106,106} %write{105,105}
temp	float	$tmp63	%read{109,109} %write{108,108}
temp	float	$tmp64	%read{110,110} %write{109,109}
temp	int	$tmp65	%read{112,116} %write{111,115}
temp	int	$tmp66	%read{114,114} %write{113,113}
temp	int	$tmp67	%read{115,115} %write{114,114}
temp	int	$tmp68	%read{119,119} %write{118,118}
temp	float	$tmp69	%read{121,121} %write{120,120}
temp	float	$tmp70	%read{122,122} %write{121,121}
temp	float	$tmp71	%read{124,124} %write{123,123}
temp	float	$tmp72	%read{125,125} %write{124,124}
temp	int	$tmp73	%read{128,134} %write{129,134}
temp	float	$tmp74	%read{130,134} %write{130,134}
temp	int	$tmp75	%read{136,136} %write{135,135}
temp	float	$tmp76	%read{138,138} %write{137,137}
temp	float	$tmp77	%read{140,140} %write{139,139}
temp	int	$tmp78	%read{143,143} %write{142,142}
const	string	$const18	"NOISE01"		%read{144,811} %write{2147483647,-1}
temp	float	$tmp79	%read{151,151} %write{150,150}
temp	float	$tmp80	%read{149,149} %write{145,145}
temp	float	$tmp81	%read{149,149} %write{146,146}
temp	float	$tmp82	%read{149,149} %write{147,147}
temp	point	$tmp83	%read{150,150} %write{149,149}
temp	float	$tmp84	%read{152,152} %write{151,151}
const	float	$const19	0.5		%read{152,853} %write{2147483647,-1}
temp	int	$tmp85	%read{155,170} %write{156,170}
temp	float	$tmp86	%read{157,170} %write{157,170}
temp	float	$tmp87	%read{157,170} %write{157,170}
temp	float	$tmp88	%read{157,170} %write{157,170}
temp	float	$tmp89	%read{157,170} %write{157,170}
temp	float	$tmp90	%read{157,170} %write{157,170}
temp	float	$tmp91	%read{157,170} %write{157,170}
temp	float	$tmp92	%read{157,170} %write{157,170}
temp	point	$tmp93	%read{157,170} %write{157,170}
temp	float	$tmp94	%read{157,170} %write{157,170}
temp	int	$tmp95	%read{172,172} %write{171,171}
temp	float	$tmp96	%read{182,182} %write{181,181}
temp	float	$tmp97	%read{174,174} %write{173,173}
temp	float	$tmp98	%read{180,180} %write{174,174}
temp	float	$tmp99	%read{176,176} %write{175,175}
temp	float	$tmp100	%read{180,180} %write{176,176}
temp	float	$tmp101	%read{178,178} %write{177,177}
temp	float	$tmp102	%read{180,180} %write{178,178}
temp	point	$tmp103	%read{181,181} %write{180,180}
temp	float	$tmp104	%read{183,183} %write{182,182}
temp	float	$tmp105	%read{184,184} %write{183,183}
temp	float	$tmp106	%read{186,186} %write{185,185}
temp	int	$tmp107	%read{188,188} %write{187,187}
temp	int	$tmp108	%read{190,190} %write{189,189}
const	string	$const20	"SmoothThresh"		%read{191,858} %write{2147483647,-1}
temp	int	$tmp109	%read{197,197} %write{196,196}
temp	int	$tmp110	%read{201,201} %write{200,200}
temp	int	$tmp111	%read{205,205} %write{204,204}
temp	float	$tmp112	%read{208,208} %write{206,206}
temp	float	$tmp113	%read{208,208} %write{207,207}
temp	float	$tmp114	%read{212,212} %write{209,209}
temp	float	$tmp115	%read{211,211} %write{210,210}
temp	float	$tmp116	%read{212,212} %write{211,211}
temp	float	$tmp117	%read{214,214} %write{213,213}
temp	float	$tmp118	%read{216,216} %write{214,214}
temp	float	$tmp119	%read{216,216} %write{215,215}
temp	int	$tmp120	%read{219,219} %write{218,218}
temp	float	$tmp121	%read{222,222} %write{220,220}
temp	float	$tmp122	%read{222,222} %write{221,221}
temp	float	$tmp123	%read{226,226} %write{224,224}
temp	float	$tmp124	%read{226,226} %write{225,225}
temp	float	$tmp125	%read{230,230} %write{227,227}
temp	float	$tmp126	%read{229,229} %write{228,228}
temp	float	$tmp127	%read{230,230} %write{229,229}
temp	float	$tmp128	%read{233,233} %write{231,231}
temp	float	$tmp129	%read{233,233} %write{232,232}
temp	float	$tmp130	%read{235,235} %write{233,233}
temp	float	$tmp131	%read{235,235} %write{234,234}
temp	float	$tmp132	%read{236,236} %write{235,235}
const	string	$const22	"threshold"		%read{238,905} %write{2147483647,-1}
temp	int	$tmp133	%read{240,240} %write{239,239}
temp	int	$tmp134	%read{244,244} %write{243,243}
temp	int	$tmp135	%read{250,250} %write{249,249}
temp	int	$tmp136	%read{253,253} %write{252,252}
temp	int	$tmp137	%read{256,256} %write{255,255}
temp	int	$tmp138	%read{258,258} %write{257,257}
temp	float	$tmp139	%read{260,260} %write{259,259}
temp	float	$tmp140	%read{261,261} %write{260,260}
temp	float	$tmp141	%read{265,265} %write{262,262}
temp	float	$tmp142	%read{264,264} %write{263,263}
temp	float	$tmp143	%read{265,265} %write{264,264}
temp	float	$tmp144	%read{269,269} %write{268,268}
temp	color	$tmp145	%read{271,271} %write{269,269}
temp	color	$tmp146	%read{271,271} %write{270,270}
temp	float	$tmp147	%read{273,273} %write{272,272}
temp	float	$tmp148	%read{275,275} %write{273,273}
temp	float	$tmp149	%read{275,275} %write{274,274}
const	string	$const23	"intensity"		%read{276,948} %write{2147483647,-1}
temp	float	$tmp150	%read{279,279} %write{277,277}
temp	float	$tmp151	%read{279,279} %write{278,278}
temp	float	$tmp152	%read{281,281} %write{279,279}
temp	float	$tmp153	%read{281,281} %write{280,280}
temp	float	$tmp154	%read{282,282} %write{281,281}
const	float	$const24	0.33333334		%read{282,954} %write{2147483647,-1}
temp	float	$tmp155	%read{287,287} %write{285,285}
temp	float	$tmp156	%read{287,287} %write{286,286}
temp	float	$tmp157	%read{289,289} %write{287,287}
temp	float	$tmp158	%read{289,289} %write{288,288}
temp	float	$tmp159	%read{290,290} %write{289,289}
const	float	$const25	0.1		%read{292,292} %write{2147483647,-1}
temp	float	$tmp160	%read{505,505} %write{304,503}
temp	vector	$tmp161	%read{294,294} %write{293,293}
temp	vector	$tmp162	%read{295,295} %write{294,294}
temp	point	$tmp163	%read{317,414} %write{295,295}
temp	float	$tmp164	%read{348,492} %write{296,296}
temp	float	$tmp165	%read{302,302} %write{301,301}
temp	int	$tmp166	%read{303,303} %write{302,302}
temp	int	$tmp167	%read{307,307} %write{306,306}
temp	int	$tmp168	%read{310,310} %write{309,309}
temp	int	$tmp169	%read{315,332} %write{316,332}
temp	float	$tmp170	%read{317,332} %write{317,332}
temp	float	$tmp171	%read{317,332} %write{317,332}
temp	float	$tmp172	%read{317,332} %write{317,332}
temp	float	$tmp173	%read{317,332} %write{317,332}
temp	float	$tmp174	%read{317,332} %write{317,332}
temp	float	$tmp175	%read{317,332} %write{317,332}
temp	float	$tmp176	%read{317,332} %write{317,332}
temp	float	$tmp177	%read{317,332} %write{317,332}
temp	point	$tmp178	%read{317,332} %write{317,332}
temp	float	$tmp179	%read{317,332} %write{317,332}
temp	int	$tmp180	%read{334,334} %write{333,333}
temp	float	$tmp181	%read{345,345} %write{344,344}
temp	float	$tmp182	%read{344,344} %write{343,343}
temp	float	$tmp183	%read{336,336} %write{335,335}
temp	float	$tmp184	%read{342,342} %write{336,336}
temp	float	$tmp185	%read{338,338} %write{337,337}
temp	float	$tmp186	%read{342,342} %write{338,338}
temp	float	$tmp187	%read{340,340} %write{339,339}
temp	float	$tmp188	%read{342,342} %write{340,340}
temp	point	$tmp189	%read{343,343} %write{342,342}
temp	float	$tmp190	%read{346,346} %write{345,345}
temp	float	$tmp191	%read{347,347} %write{346,346}
temp	int	$tmp192	%read{349,353} %write{348,352}
temp	int	$tmp193	%read{351,351} %write{350,350}
temp	int	$tmp194	%read{352,352} %write{351,351}
temp	int	$tmp195	%read{356,356} %write{355,355}
temp	float	$tmp196	%read{358,358} %write{357,357}
temp	float	$tmp197	%read{359,359} %write{358,358}
temp	float	$tmp198	%read{361,361} %write{360,360}
temp	float	$tmp199	%read{362,362} %write{361,361}
temp	int	$tmp200	%read{365,371} %write{366,371}
temp	float	$tmp201	%read{367,371} %write{367,371}
temp	int	$tmp202	%read{373,373} %write{372,372}
temp	float	$tmp203	%read{375,375} %write{374,374}
temp	float	$tmp204	%read{377,377} %write{376,376}
temp	int	$tmp205	%read{380,380} %write{379,379}
temp	float	$tmp206	%read{388,388} %write{387,387}
temp	float	$tmp207	%read{386,386} %write{382,382}
temp	float	$tmp208	%read{386,386} %write{383,383}
temp	float	$tmp209	%read{386,386} %write{384,384}
temp	point	$tmp210	%read{387,387} %write{386,386}
temp	float	$tmp211	%read{389,389} %write{388,388}
temp	int	$tmp212	%read{392,407} %write{393,407}
temp	float	$tmp213	%read{394,407} %write{394,407}
temp	float	$tmp214	%read{394,407} %write{394,407}
temp	float	$tmp215	%read{394,407} %write{394,407}
temp	float	$tmp216	%read{394,407} %write{394,407}
temp	float	$tmp217	%read{394,407} %write{394,407}
temp	float	$tmp218	%read{394,407} %write{394,407}
temp	float	$tmp219	%read{394,407} %write{394,407}
temp	point	$tmp220	%read{394,407} %write{394,407}
temp	float	$tmp221	%read{394,407} %write{394,407}
temp	int	$tmp222	%read{409,409} %write{408,408}
temp	float	$tmp223	%read{419,419} %write{418,418}
temp	float	$tmp224	%read{411,411} %write{410,410}
temp	float	$tmp225	%read{417,417} %write{411,411}
temp	float	$tmp226	%read{413,413} %write{412,412}
temp	float	$tmp227	%read{417,417} %write{413,413}
temp	float	$tmp228	%read{415,415} %write{414,414}
temp	float	$tmp229	%read{417,417} %write{415,415}
temp	point	$tmp230	%read{418,418} %write{417,417}
temp	float	$tmp231	%read{420,420} %write{419,419}
temp	float	$tmp232	%read{421,421} %write{420,420}
temp	float	$tmp233	%read{423,423} %write{422,422}
temp	int	$tmp234	%read{425,425} %write{424,424}
temp	int	$tmp235	%read{427,427} %write{426,426}
temp	int	$tmp236	%read{434,434} %write{433,433}
temp	int	$tmp237	%read{438,438} %write{437,437}
temp	int	$tmp238	%read{442,442} %write{441,441}
temp	float	$tmp239	%read{445,445} %write{443,443}
temp	float	$tmp240	%read{445,445} %write{444,444}
temp	float	$tmp241	%read{449,449} %write{446,446}
temp	float	$tmp242	%read{448,448} %write{447,447}
temp	float	$tmp243	%read{449,449} %write{448,448}
temp	float	$tmp244	%read{451,451} %write{450,450}
temp	float	$tmp245	%read{453,453} %write{451,451}
temp	float	$tmp246	%read{453,453} %write{452,452}
temp	int	$tmp247	%read{456,456} %write{455,455}
temp	float	$tmp248	%read{459,459} %write{457,457}
temp	float	$tmp249	%read{459,459} %write{458,458}
temp	float	$tmp250	%read{463,463} %write{461,461}
temp	float	$tmp251	%read{463,463} %write{462,462}
temp	float	$tmp252	%read{467,467} %write{464,464}
temp	float	$tmp253	%read{466,466} %write{465,465}
temp	float	$tmp254	%read{467,467} %write{466,466}
temp	float	$tmp255	%read{470,470} %write{468,468}
temp	float	$tmp256	%read{470,470} %write{469,469}
temp	float	$tmp257	%read{472,472} %write{470,470}
temp	float	$tmp258	%read{472,472} %write{471,471}
temp	float	$tmp259	%read{473,473} %write{472,472}
temp	int	$tmp260	%read{477,477} %write{476,476}
temp	int	$tmp261	%read{481,481} %write{480,480}
temp	int	$tmp262	%read{487,487} %write{486,486}
temp	int	$tmp263	%read{490,490} %write{489,489}
temp	int	$tmp264	%read{493,493} %write{492,492}
temp	int	$tmp265	%read{495,495} %write{494,494}
temp	float	$tmp266	%read{497,497} %write{496,496}
temp	float	$tmp267	%read{498,498} %write{497,497}
temp	float	$tmp268	%read{502,502} %write{499,499}
temp	float	$tmp269	%read{501,501} %write{500,500}
temp	float	$tmp270	%read{502,502} %write{501,501}
temp	float	$tmp271	%read{506,506} %write{505,505}
temp	float	$tmp272	%read{507,507} %write{506,506}
temp	float	$tmp273	%read{720,720} %write{519,718}
temp	vector	$tmp274	%read{509,509} %write{508,508}
temp	vector	$tmp275	%read{510,510} %write{509,509}
temp	point	$tmp276	%read{532,629} %write{510,510}
temp	float	$tmp277	%read{563,707} %write{511,511}
temp	float	$tmp278	%read{517,517} %write{516,516}
temp	int	$tmp279	%read{518,518} %write{517,517}
temp	int	$tmp280	%read{522,522} %write{521,521}
temp	int	$tmp281	%read{525,525} %write{524,524}
temp	int	$tmp282	%read{530,547} %write{531,547}
temp	float	$tmp283	%read{532,547} %write{532,547}
temp	float	$tmp284	%read{532,547} %write{532,547}
temp	float	$tmp285	%read{532,547} %write{532,547}
temp	float	$tmp286	%read{532,547} %write{532,547}
temp	float	$tmp287	%read{532,547} %write{532,547}
temp	float	$tmp288	%read{532,547} %write{532,547}
temp	float	$tmp289	%read{532,547} %write{532,547}
temp	float	$tmp290	%read{532,547} %write{532,547}
temp	point	$tmp291	%read{532,547} %write{532,547}
temp	float	$tmp292	%read{532,547} %write{532,547}
temp	int	$tmp293	%read{549,549} %write{548,548}
temp	float	$tmp294	%read{560,560} %write{559,559}
temp	float	$tmp295	%read{559,559} %write{558,558}
temp	float	$tmp296	%read{551,551} %write{550,550}
temp	float	$tmp297	%read{557,557} %write{551,551}
temp	float	$tmp298	%read{553,553} %write{552,552}
temp	float	$tmp299	%read{557,557} %write{553,553}
temp	float	$tmp300	%read{555,555} %write{554,554}
temp	float	$tmp301	%read{557,557} %write{555,555}
temp	point	$tmp302	%read{558,558} %write{557,557}
temp	float	$tmp303	%read{561,561} %write{560,560}
temp	float	$tmp304	%read{562,562} %write{561,561}
temp	int	$tmp305	%read{564,568} %write{563,567}
temp	int	$tmp306	%read{566,566} %write{565,565}
temp	int	$tmp307	%read{567,567} %write{566,566}
temp	int	$tmp308	%read{571,571} %write{570,570}
temp	float	$tmp309	%read{573,573} %write{572,572}
temp	float	$tmp310	%read{574,574} %write{573,573}
temp	float	$tmp311	%read{576,576} %write{575,575}
temp	float	$tmp312	%read{577,577} %write{576,576}
temp	int	$tmp313	%read{580,586} %write{581,586}
temp	float	$tmp314	%read{582,586} %write{582,586}
temp	int	$tmp315	%read{588,588} %write{587,587}
temp	float	$tmp316	%read{590,590} %write{589,589}
temp	float	$tmp317	%read{592,592} %write{591,591}
temp	int	$tmp318	%read{595,595} %write{594,594}
temp	float	$tmp319	%read{603,603} %write{602,602}
temp	float	$tmp320	%read{601,601} %write{597,597}
temp	float	$tmp321	%read{601,601} %write{598,598}
temp	float	$tmp322	%read{601,601} %write{599,599}
temp	point	$tmp323	%read{602,602} %write{601,601}
temp	float	$tmp324	%read{604,604} %write{603,603}
temp	int	$tmp325	%read{607,622} %write{608,622}
temp	float	$tmp326	%read{609,622} %write{609,622}
temp	float	$tmp327	%read{609,622} %write{609,622}
temp	float	$tmp328	%read{609,622} %write{609,622}
temp	float	$tmp329	%read{609,622} %write{609,622}
temp	float	$tmp330	%read{609,622} %write{609,622}
temp	float	$tmp331	%read{609,622} %write{609,622}
temp	float	$tmp332	%read{609,622} %write{609,622}
temp	point	$tmp333	%read{609,622} %write{609,622}
temp	float	$tmp334	%read{609,622} %write{609,622}
temp	int	$tmp335	%read{624,624} %write{623,623}
temp	float	$tmp336	%read{634,634} %write{633,633}
temp	float	$tmp337	%read{626,626} %write{625,625}
temp	float	$tmp338	%read{632,632} %write{626,626}
temp	float	$tmp339	%read{628,628} %write{627,627}
temp	float	$tmp340	%read{632,632} %write{628,628}
temp	float	$tmp341	%read{630,630} %write{629,629}
temp	float	$tmp342	%read{632,632} %write{630,630}
temp	point	$tmp343	%read{633,633} %write{632,632}
temp	float	$tmp344	%read{635,635} %write{634,634}
temp	float	$tmp345	%read{636,636} %write{635,635}
temp	float	$tmp346	%read{638,638} %write{637,637}
temp	int	$tmp347	%read{640,640} %write{639,639}
temp	int	$tmp348	%read{642,642} %write{641,641}
temp	int	$tmp349	%read{649,649} %write{648,648}
temp	int	$tmp350	%read{653,653} %write{652,652}
temp	int	$tmp351	%read{657,657} %write{656,656}
temp	float	$tmp352	%read{660,660} %write{658,658}
temp	float	$tmp353	%read{660,660} %write{659,659}
temp	float	$tmp354	%read{664,664} %write{661,661}
temp	float	$tmp355	%read{663,663} %write{662,662}
temp	float	$tmp356	%read{664,664} %write{663,663}
temp	float	$tmp357	%read{666,666} %write{665,665}
temp	float	$tmp358	%read{668,668} %write{666,666}
temp	float	$tmp359	%read{668,668} %write{667,667}
temp	int	$tmp360	%read{671,671} %write{670,670}
temp	float	$tmp361	%read{674,674} %write{672,672}
temp	float	$tmp362	%read{674,674} %write{673,673}
temp	float	$tmp363	%read{678,678} %write{676,676}
temp	float	$tmp364	%read{678,678} %write{677,677}
temp	float	$tmp365	%read{682,682} %write{679,679}
temp	float	$tmp366	%read{681,681} %write{680,680}
temp	float	$tmp367	%read{682,682} %write{681,681}
temp	float	$tmp368	%read{685,685} %write{683,683}
temp	float	$tmp369	%read{685,685} %write{684,684}
temp	float	$tmp370	%read{687,687} %write{685,685}
temp	float	$tmp371	%read{687,687} %write{686,686}
temp	float	$tmp372	%read{688,688} %write{687,687}
temp	int	$tmp373	%read{692,692} %write{691,691}
temp	int	$tmp374	%read{696,696} %write{695,695}
temp	int	$tmp375	%read{702,702} %write{701,701}
temp	int	$tmp376	%read{705,705} %write{704,704}
temp	int	$tmp377	%read{708,708} %write{707,707}
temp	int	$tmp378	%read{710,710} %write{709,709}
temp	float	$tmp379	%read{712,712} %write{711,711}
temp	float	$tmp380	%read{713,713} %write{712,712}
temp	float	$tmp381	%read{717,717} %write{714,714}
temp	float	$tmp382	%read{716,716} %write{715,715}
temp	float	$tmp383	%read{717,717} %write{716,716}
temp	float	$tmp384	%read{721,721} %write{720,720}
temp	float	$tmp385	%read{722,722} %write{721,721}
temp	float	$tmp386	%read{935,935} %write{734,933}
temp	vector	$tmp387	%read{724,724} %write{723,723}
temp	vector	$tmp388	%read{725,725} %write{724,724}
temp	point	$tmp389	%read{747,844} %write{725,725}
temp	float	$tmp390	%read{778,922} %write{726,726}
temp	float	$tmp391	%read{732,732} %write{731,731}
temp	int	$tmp392	%read{733,733} %write{732,732}
temp	int	$tmp393	%read{737,737} %write{736,736}
temp	int	$tmp394	%read{740,740} %write{739,739}
temp	int	$tmp395	%read{745,762} %write{746,762}
temp	float	$tmp396	%read{747,762} %write{747,762}
temp	float	$tmp397	%read{747,762} %write{747,762}
temp	float	$tmp398	%read{747,762} %write{747,762}
temp	float	$tmp399	%read{747,762} %write{747,762}
temp	float	$tmp400	%read{747,762} %write{747,762}
temp	float	$tmp401	%read{747,762} %write{747,762}
temp	float	$tmp402	%read{747,762} %write{747,762}
temp	float	$tmp403	%read{747,762} %write{747,762}
temp	point	$tmp404	%read{747,762} %write{747,762}
temp	float	$tmp405	%read{747,762} %write{747,762}
temp	int	$tmp406	%read{764,764} %write{763,763}
temp	float	$tmp407	%read{775,775} %write{774,774}
temp	float	$tmp408	%read{774,774} %write{773,773}
temp	float	$tmp409	%read{766,766} %write{765,765}
temp	float	$tmp410	%read{772,772} %write{766,766}
temp	float	$tmp411	%read{768,768} %write{767,767}
temp	float	$tmp412	%read{772,772} %write{768,768}
temp	float	$tmp413	%read{770,770} %write{769,769}
temp	float	$tmp414	%read{772,772} %write{770,770}
temp	point	$tmp415	%read{773,773} %write{772,772}
temp	float	$tmp416	%read{776,776} %write{775,775}
temp	float	$tmp417	%read{777,777} %write{776,776}
temp	int	$tmp418	%read{779,783} %write{778,782}
temp	int	$tmp419	%read{781,781} %write{780,780}
temp	int	$tmp420	%read{782,782} %write{781,781}
temp	int	$tmp421	%read{786,786} %write{785,785}
temp	float	$tmp422	%read{788,788} %write{787,787}
temp	float	$tmp423	%read{789,789} %write{788,788}
temp	float	$tmp424	%read{791,791} %write{790,790}
temp	float	$tmp425	%read{792,792} %write{791,791}
temp	int	$tmp426	%read{795,801} %write{796,801}
temp	float	$tmp427	%read{797,801} %write{797,801}
temp	int	$tmp428	%read{803,803} %write{802,802}
temp	float	$tmp429	%read{805,805} %write{804,804}
temp	float	$tmp430	%read{807,807} %write{806,806}
temp	int	$tmp431	%read{810,810} %write{809,809}
temp	float	$tmp432	%read{818,818} %write{817,817}
temp	float	$tmp433	%read{816,816} %write{812,812}
temp	float	$tmp434	%read{816,816} %write{813,813}
temp	float	$tmp435	%read{816,816} %write{814,814}
temp	point	$tmp436	%read{817,817} %write{816,816}
temp	float	$tmp437	%read{819,819} %write{818,818}
temp	int	$tmp438	%read{822,837} %write{823,837}
temp	float	$tmp439	%read{824,837} %write{824,837}
temp	float	$tmp440	%read{824,837} %write{824,837}
temp	float	$tmp441	%read{824,837} %write{824,837}
temp	float	$tmp442	%read{824,837} %write{824,837}
temp	float	$tmp443	%read{824,837} %write{824,837}
temp	float	$tmp444	%read{824,837} %write{824,837}
temp	float	$tmp445	%read{824,837} %write{824,837}
temp	point	$tmp446	%read{824,837} %write{824,837}
temp	float	$tmp447	%read{824,837} %write{824,837}
temp	int	$tmp448	%read{839,839} %write{838,838}
temp	float	$tmp449	%read{849,849} %write{848,848}
temp	float	$tmp450	%read{841,841} %write{840,840}
temp	float	$tmp451	%read{847,847} %write{841,841}
temp	float	$tmp452	%read{843,843} %write{842,842}
temp	float	$tmp453	%read{847,847} %write{843,843}
temp	float	$tmp454	%read{845,845} %write{844,844}
temp	float	$tmp455	%read{847,847} %write{845,845}
temp	point	$tmp456	%read{848,848} %write{847,847}
temp	float	$tmp457	%read{850,850} %write{849,849}
temp	float	$tmp458	%read{851,851} %write{850,850}
temp	float	$tmp459	%read{853,853} %write{852,852}
temp	int	$tmp460	%read{855,855} %write{854,854}
temp	int	$tmp461	%read{857,857} %write{856,856}
temp	int	$tmp462	%read{864,864} %write{863,863}
temp	int	$tmp463	%read{868,868} %write{867,867}
temp	int	$tmp464	%read{872,872} %write{871,871}
temp	float	$tmp465	%read{875,875} %write{873,873}
temp	float	$tmp466	%read{875,875} %write{874,874}
temp	float	$tmp467	%read{879,879} %write{876,876}
temp	float	$tmp468	%read{878,878} %write{877,877}
temp	float	$tmp469	%read{879,879} %write{878,878}
temp	float	$tmp470	%read{881,881} %write{880,880}
temp	float	$tmp471	%read{883,883} %write{881,881}
temp	float	$tmp472	%read{883,883} %write{882,882}
temp	int	$tmp473	%read{886,886} %write{885,885}
temp	float	$tmp474	%read{889,889} %write{887,887}
temp	float	$tmp475	%read{889,889} %write{888,888}
temp	float	$tmp476	%read{893,893} %write{891,891}
temp	float	$tmp477	%read{893,893} %write{892,892}
temp	float	$tmp478	%read{897,897} %write{894,894}
temp	float	$tmp479	%read{896,896} %write{895,895}
temp	float	$tmp480	%read{897,897} %write{896,896}
temp	float	$tmp481	%read{900,900} %write{898,898}
temp	float	$tmp482	%read{900,900} %write{899,899}
temp	float	$tmp483	%read{902,902} %write{900,900}
temp	float	$tmp484	%read{902,902} %write{901,901}
temp	float	$tmp485	%read{903,903} %write{902,902}
temp	int	$tmp486	%read{907,907} %write{906,906}
temp	int	$tmp487	%read{911,911} %write{910,910}
temp	int	$tmp488	%read{917,917} %write{916,916}
temp	int	$tmp489	%read{920,920} %write{919,919}
temp	int	$tmp490	%read{923,923} %write{922,922}
temp	int	$tmp491	%read{925,925} %write{924,924}
temp	float	$tmp492	%read{927,927} %write{926,926}
temp	float	$tmp493	%read{928,928} %write{927,927}
temp	float	$tmp494	%read{932,932} %write{929,929}
temp	float	$tmp495	%read{931,931} %write{930,930}
temp	float	$tmp496	%read{932,932} %write{931,931}
temp	float	$tmp497	%read{936,936} %write{935,935}
temp	float	$tmp498	%read{937,937} %write{936,936}
const	float	$const27	1000		%read{938,938} %write{2147483647,-1}
temp	int	$tmp499	%read{940,940} %write{939,939}
temp	int	$tmp500	%read{941,945} %write{940,944}
temp	int	$tmp501	%read{943,943} %write{942,942}
temp	int	$tmp502	%read{944,944} %write{943,943}
temp	float	$tmp503	%read{947,947} %write{946,946}
temp	vector	$tmp504	%read{958,958} %write{947,947}
temp	float	$tmp505	%read{957,957} %write{955,955}
temp	float	$tmp506	%read{951,951} %write{949,949}
temp	float	$tmp507	%read{951,951} %write{950,950}
temp	float	$tmp508	%read{953,953} %write{951,951}
temp	float	$tmp509	%read{953,953} %write{952,952}
temp	float	$tmp510	%read{954,954} %write{953,953}
temp	vector	$tmp511	%read{957,957} %write{956,956}
temp	vector	$tmp512	%read{958,958} %write{957,957}
temp	vector	$tmp513	%read{959,959} %write{958,958}
temp	float	$tmp514	%read{961,961} %write{960,960}
code ___main___
	assign		p coords 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{193} %argrw{"wr"}
	div		p p size 	%line{194} %argrw{"wrr"}
	compref		$tmp3 p $const1 	%line{197} %argrw{"wrr"}
	Dx		$tmp2 $tmp3 	%argrw{"wr"} %argderivs{1}
	fabs		$tmp1 $tmp2 	%argrw{"wr"}
	compref		$tmp6 p $const1 	%argrw{"wrr"}
	Dy		$tmp5 $tmp6 	%argrw{"wr"} %argderivs{1}
	fabs		$tmp4 $tmp5 	%argrw{"wr"}
	add		$tmp7 $tmp1 $tmp4 	%argrw{"wrr"}
	compassign	dp $const1 $tmp7 	%argrw{"wrr"}
	compref		$tmp10 p $const2 	%line{198} %argrw{"wrr"}
	Dx		$tmp9 $tmp10 	%argrw{"wr"} %argderivs{1}
	fabs		$tmp8 $tmp9 	%argrw{"wr"}
	compref		$tmp13 p $const2 	%argrw{"wrr"}
	Dy		$tmp12 $tmp13 	%argrw{"wr"} %argderivs{1}
	fabs		$tmp11 $tmp12 	%argrw{"wr"}
	add		$tmp14 $tmp8 $tmp11 	%argrw{"wrr"}
	compassign	dp $const2 $tmp14 	%argrw{"wrr"}
	compref		$tmp17 p $const3 	%line{199} %argrw{"wrr"}
	Dx		$tmp16 $tmp17 	%argrw{"wr"} %argderivs{1}
	fabs		$tmp15 $tmp16 	%argrw{"wr"}
	compref		$tmp20 p $const3 	%argrw{"wrr"}
	Dy		$tmp19 $tmp20 	%argrw{"wr"} %argderivs{1}
	fabs		$tmp18 $tmp19 	%argrw{"wr"}
	add		$tmp21 $tmp15 $tmp18 	%argrw{"wrr"}
	compassign	dp $const3 $tmp21 	%argrw{"wrr"}
	functioncall	$const4 59 	%line{202} %argrw{"r"}
	assign		___370_epsilon $const5 	%line{51} %argrw{"wr"}
	eq		$tmp22 filter $const2 	%line{52} %argrw{"wrr"}
	if		$tmp22 56 59 	%argrw{"r"}
	compref		$tmp24 dp $const1 	%line{54} %argrw{"wrr"}
	fabs		$tmp23 $tmp24 	%argrw{"wr"}
	compref		$tmp26 dp $const2 	%argrw{"wrr"}
	fabs		$tmp25 $tmp26 	%argrw{"wr"}
	add		$tmp27 $tmp23 $tmp25 	%argrw{"wrr"}
	compref		$tmp29 dp $const3 	%argrw{"wrr"}
	fabs		$tmp28 $tmp29 	%argrw{"wr"}
	add		$tmp30 $tmp27 $tmp28 	%argrw{"wrr"}
	div		$tmp31 $tmp30 $const6 	%argrw{"wrr"}
	div		___371_m $tmp31 size 	%argrw{"wrr"}
	lt		$tmp32 ___371_m ___370_epsilon 	%line{55} %argrw{"wrr"}
	if		$tmp32 43 43 	%argrw{"r"}
	assign		___371_m ___370_epsilon 	%argrw{"wr"}
	div		$tmp34 $const7 ___371_m 	%line{56} %argrw{"wrr"}
	log		$tmp33 $tmp34 	%argrw{"wr"}
	div		___371_l $tmp33 $const8 	%argrw{"wrr"}
	mul		___371_smWidth ___371_m $const9 	%line{57} %argrw{"wrr"}
	gt		$tmp35 ___371_smWidth $const10 	%line{58} %argrw{"wrr"}
	if		$tmp35 50 50 	%argrw{"r"}
	assign		___371_smWidth $const10 	%argrw{"wr"}
	assign		smw ___371_smWidth 	%line{59} %argrw{"wr"}
	lt		$tmp36 levels ___371_l 	%line{60} %argrw{"wrr"}
	if		$tmp36 54 55 	%argrw{"r"}
	assign		limlev levels 	%argrw{"wr"}
	assign		limlev ___371_l 	%argrw{"wr"}
	return
	assign		smw $const11 	%line{64} %argrw{"wr"}
	assign		limlev levels 	%line{65} %argrw{"wr"}
	return
	assign		$tmp37 filter 	%line{203} %argrw{"wr"}
	functioncall	$const12 268 	%argrw{"r"}
	assign		___383_BLENDBAND $const13 	%line{121} %argrw{"wr"}
	assign		___383_res $const11 	%line{122} %argrw{"wr"}
	assign		___383_lev limlev 	%line{123} %argrw{"wr"}
	sub		$tmp38 $const7 ___383_BLENDBAND 	%line{124} %argrw{"wrr"}
	lt		$tmp39 limlev $tmp38 	%argrw{"wrr"}
	if		$tmp39 69 69 	%argrw{"r"}
	assign		d avgValue 	%argrw{"wr"}
	return
	lt		$tmp40 ___383_lev $const7 	%line{126} %argrw{"wrr"}
	if		$tmp40 72 72 	%argrw{"r"}
	assign		___383_lev $const7 	%argrw{"wr"}
	eq		$tmp41 type $const3 	%line{127} %argrw{"wrr"}
	if		$tmp41 142 187 	%argrw{"r"}
	functioncall	$const14 142 	%line{129} %argrw{"r"}
	assign		___375_sum $const11 	%line{83} %argrw{"wr"}
	assign		___375_f $const7 	%line{84} %argrw{"wr"}
	assign		___375_ml levels 	%line{85} %argrw{"wr"}
	for		$tmp42 80 81 95 96 	%line{86} %argrw{"r"}
	assign		___375_l ___383_lev 	%argrw{"wr"}
	ge		$tmp42 ___375_l $const7 	%argrw{"wrr"}
	compref		$tmp45 p $const1 	%line{88} %argrw{"wrr"}
	mul		$tmp46 $tmp45 ___375_f 	%argrw{"wrr"}
	compref		$tmp47 p $const2 	%argrw{"wrr"}
	mul		$tmp48 $tmp47 ___375_f 	%argrw{"wrr"}
	compref		$tmp49 p $const3 	%argrw{"wrr"}
	mul		$tmp50 $tmp49 ___375_f 	%argrw{"wrr"}
	functioncall	$const15 90 	%argrw{"r"}
	point		$tmp51 $tmp46 $tmp48 $tmp50 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp44 $const16 $tmp51 phase 	%argrw{"wrrr"}
	fabs		$tmp43 $tmp44 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{88} %argrw{"wr"}
	div		$tmp52 $tmp43 ___375_f 	%argrw{"wrr"}
	add		___375_sum ___375_sum $tmp52 	%argrw{"wrr"}
	mul		___375_f ___375_f $const17 	%line{89} %argrw{"wrr"}
	sub		___375_ml ___375_ml $const7 	%line{90} %argrw{"wrr"}
	sub		___375_l ___375_l $const7 	%line{86} %argrw{"wrr"}
	gt		$tmp53 ___375_l $const11 	%line{92} %argrw{"wrr"}
	if		$tmp53 111 111 	%argrw{"r"}
	compref		$tmp56 p $const1 	%argrw{"wrr"}
	mul		$tmp57 $tmp56 ___375_f 	%argrw{"wrr"}
	compref		$tmp58 p $const2 	%argrw{"wrr"}
	mul		$tmp59 $tmp58 ___375_f 	%argrw{"wrr"}
	compref		$tmp60 p $const3 	%argrw{"wrr"}
	mul		$tmp61 $tmp60 ___375_f 	%argrw{"wrr"}
	functioncall	$const15 107 	%argrw{"r"}
	point		$tmp62 $tmp57 $tmp59 $tmp61 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp55 $const16 $tmp62 phase 	%argrw{"wrrr"}
	fabs		$tmp54 $tmp55 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{92} %argrw{"wr"}
	mul		$tmp63 ___375_l $tmp54 	%argrw{"wrr"}
	div		$tmp64 $tmp63 ___375_f 	%argrw{"wrr"}
	add		___375_sum ___375_sum $tmp64 	%argrw{"wrr"}
	neq		$tmp65 $tmp37 $const11 	%line{94} %argrw{"wrr"}
	if		$tmp65 116 116 	%argrw{"r"}
	gt		$tmp66 ___375_ml ___375_l 	%argrw{"wrr"}
	neq		$tmp67 $tmp66 $const1 	%argrw{"wrr"}
	assign		$tmp65 $tmp67 	%argrw{"wr"}
	if		$tmp65 141 141 	%argrw{"r"}
	assign		___378_r $const1 	%line{96} %argrw{"wr"}
	lt		$tmp68 ___375_ml $const7 	%line{97} %argrw{"wrr"}
	if		$tmp68 123 141 	%argrw{"r"}
	sub		$tmp69 ___375_ml ___375_l 	%line{99} %argrw{"wrr"}
	div		$tmp70 $tmp69 ___375_f 	%argrw{"wrr"}
	add		___378_r ___378_r $tmp70 	%argrw{"wrr"}
	sub		$tmp71 $const7 ___375_l 	%line{103} %argrw{"wrr"}
	div		$tmp72 $tmp71 ___375_f 	%argrw{"wrr"}
	add		___378_r ___378_r $tmp72 	%argrw{"wrr"}
	sub		___375_ml ___375_ml $const7 	%line{104} %argrw{"wrr"}
	mul		___375_f ___375_f $const17 	%line{105} %argrw{"wrr"}
	for		$tmp73 130 131 134 135 	%line{106} %argrw{"r"}
	assign		___375_l ___375_ml 	%argrw{"wr"}
	ge		$tmp73 ___375_l $const7 	%argrw{"wrr"}
	div		$tmp74 $const7 ___375_f 	%line{108} %argrw{"wrr"}
	add		___378_r ___378_r $tmp74 	%argrw{"wrr"}
	mul		___375_f ___375_f $const17 	%line{109} %argrw{"wrr"}
	sub		___375_l ___375_l $const7 	%line{106} %argrw{"wrr"}
	gt		$tmp75 ___375_l $const11 	%line{111} %argrw{"wrr"}
	if		$tmp75 139 139 	%argrw{"r"}
	div		$tmp76 ___375_l ___375_f 	%argrw{"wrr"}
	add		___378_r ___378_r $tmp76 	%argrw{"wrr"}
	mul		$tmp77 ___378_r avgAbsNs 	%line{112} %argrw{"wrr"}
	add		___375_sum ___375_sum $tmp77 	%argrw{"wrr"}
	assign		___383_res ___375_sum 	%line{115} %argrw{"wr"}
	eq		$tmp78 type $const1 	%line{131} %argrw{"wrr"}
	if		$tmp78 153 187 	%argrw{"r"}
	functioncall	$const18 153 	%line{133} %argrw{"r"}
	compref		$tmp80 p $const1 	%line{78} %argrw{"wrr"}
	compref		$tmp81 p $const2 	%argrw{"wrr"}
	compref		$tmp82 p $const3 	%argrw{"wrr"}
	functioncall	$const15 151 	%argrw{"r"}
	point		$tmp83 $tmp80 $tmp81 $tmp82 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp79 $const16 $tmp83 phase 	%argrw{"wrrr"}
	add		$tmp84 $const7 $tmp79 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{78} %argrw{"wrr"}
	mul		___383_res $tmp84 $const19 	%argrw{"wrr"}
	assign		___386_sum $const11 	%line{137} %argrw{"wr"}
	assign		___386_f $const7 	%line{138} %argrw{"wr"}
	for		$tmp85 157 158 170 171 	%line{139} %argrw{"r"}
	assign		___386_l ___383_lev 	%argrw{"wr"}
	ge		$tmp85 ___386_l $const7 	%argrw{"wrr"}
	compref		$tmp87 p $const1 	%line{141} %argrw{"wrr"}
	mul		$tmp88 $tmp87 ___386_f 	%argrw{"wrr"}
	compref		$tmp89 p $const2 	%argrw{"wrr"}
	mul		$tmp90 $tmp89 ___386_f 	%argrw{"wrr"}
	compref		$tmp91 p $const3 	%argrw{"wrr"}
	mul		$tmp92 $tmp91 ___386_f 	%argrw{"wrr"}
	functioncall	$const15 167 	%argrw{"r"}
	point		$tmp93 $tmp88 $tmp90 $tmp92 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp86 $const16 $tmp93 phase 	%argrw{"wrrr"}
	div		$tmp94 $tmp86 ___386_f 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{141} %argrw{"wrr"}
	add		___386_sum ___386_sum $tmp94 	%argrw{"wrr"}
	mul		___386_f ___386_f $const17 	%line{142} %argrw{"wrr"}
	sub		___386_l ___386_l $const7 	%line{139} %argrw{"wrr"}
	gt		$tmp95 ___386_l $const11 	%line{144} %argrw{"wrr"}
	if		$tmp95 185 185 	%argrw{"r"}
	compref		$tmp97 p $const1 	%line{145} %argrw{"wrr"}
	mul		$tmp98 $tmp97 ___386_f 	%argrw{"wrr"}
	compref		$tmp99 p $const2 	%argrw{"wrr"}
	mul		$tmp100 $tmp99 ___386_f 	%argrw{"wrr"}
	compref		$tmp101 p $const3 	%argrw{"wrr"}
	mul		$tmp102 $tmp101 ___386_f 	%argrw{"wrr"}
	functioncall	$const15 182 	%argrw{"r"}
	point		$tmp103 $tmp98 $tmp100 $tmp102 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp96 $const16 $tmp103 phase 	%argrw{"wrrr"}
	mul		$tmp104 ___386_l $tmp96 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{145} %argrw{"wrr"}
	div		$tmp105 $tmp104 ___386_f 	%argrw{"wrr"}
	add		___386_sum ___386_sum $tmp105 	%argrw{"wrr"}
	add		$tmp106 ___386_sum $const7 	%line{146} %argrw{"wrr"}
	mul		___383_res $const19 $tmp106 	%argrw{"wrr"}
	lt		$tmp107 thresholdLow thresholdHigh 	%line{148} %argrw{"wrr"}
	if		$tmp107 249 249 	%argrw{"r"}
	neq		$tmp108 $tmp37 $const11 	%line{150} %argrw{"wrr"}
	if		$tmp108 238 249 	%line{151} %argrw{"r"}
	functioncall	$const20 238 	%line{150} %argrw{"r"}
	sub		___366_al thresholdLow smw 	%line{25} %argrw{"wrr"}
	add		___366_ah thresholdLow smw 	%line{26} %argrw{"wrr"}
	sub		___366_bl thresholdHigh smw 	%line{27} %argrw{"wrr"}
	add		___366_bh thresholdHigh smw 	%line{28} %argrw{"wrr"}
	lt		$tmp109 ___383_res ___366_al 	%line{29} %argrw{"wrr"}
	if		$tmp109 200 200 	%argrw{"r"}
	assign		___383_res $const11 	%argrw{"wr"}
	return
	gt		$tmp110 ___383_res ___366_bh 	%line{30} %argrw{"wrr"}
	if		$tmp110 204 204 	%argrw{"r"}
	assign		___383_res $const7 	%argrw{"wr"}
	return
	lt		$tmp111 ___383_res ___366_ah 	%line{31} %argrw{"wrr"}
	if		$tmp111 218 218 	%argrw{"r"}
	sub		$tmp112 ___383_res ___366_al 	%line{33} %argrw{"wrr"}
	sub		$tmp113 ___366_ah ___366_al 	%argrw{"wrr"}
	div		___367_u $tmp112 $tmp113 	%argrw{"wrr"}
	mul		$tmp114 ___367_u ___367_u 	%line{34} %argrw{"wrr"}
	mul		$tmp115 $const17 ___367_u 	%argrw{"wrr"}
	sub		$tmp116 $const6 $tmp115 	%argrw{"wrr"}
	mul		___367_u $tmp114 $tmp116 	%argrw{"wrr"}
	sub		$tmp117 ___383_res thresholdLow 	%line{35} %argrw{"wrr"}
	mul		$tmp118 ___367_u $tmp117 	%argrw{"wrr"}
	sub		$tmp119 thresholdHigh thresholdLow 	%argrw{"wrr"}
	div		___383_res $tmp118 $tmp119 	%argrw{"wrr"}
	return
	lt		$tmp120 ___383_res ___366_bl 	%line{37} %argrw{"wrr"}
	if		$tmp120 224 238 	%argrw{"r"}
	sub		$tmp121 ___383_res thresholdLow 	%line{39} %argrw{"wrr"}
	sub		$tmp122 thresholdHigh thresholdLow 	%argrw{"wrr"}
	div		___383_res $tmp121 $tmp122 	%argrw{"wrr"}
	return
	sub		$tmp123 ___383_res ___366_bl 	%line{43} %argrw{"wrr"}
	sub		$tmp124 ___366_bh ___366_bl 	%argrw{"wrr"}
	div		___369_u $tmp123 $tmp124 	%argrw{"wrr"}
	mul		$tmp125 ___369_u ___369_u 	%line{44} %argrw{"wrr"}
	mul		$tmp126 $const17 ___369_u 	%argrw{"wrr"}
	sub		$tmp127 $const6 $tmp126 	%argrw{"wrr"}
	mul		___369_u $tmp125 $tmp127 	%argrw{"wrr"}
	sub		$tmp128 $const7 ___369_u 	%line{45} %argrw{"wrr"}
	sub		$tmp129 ___383_res thresholdLow 	%argrw{"wrr"}
	mul		$tmp130 $tmp128 $tmp129 	%argrw{"wrr"}
	sub		$tmp131 thresholdHigh thresholdLow 	%argrw{"wrr"}
	div		$tmp132 $tmp130 $tmp131 	%argrw{"wrr"}
	add		___383_res $tmp132 ___369_u 	%argrw{"wrr"}
	return
	functioncall	$const22 249 	%line{151} %argrw{"r"}
	lt		$tmp133 ___383_res thresholdLow 	%line{71} %argrw{"wrr"}
	if		$tmp133 243 249 	%argrw{"r"}
	assign		___383_res $const1 	%argrw{"wr"}
	return
	gt		$tmp134 ___383_res thresholdHigh 	%line{72} %argrw{"wrr"}
	if		$tmp134 247 249 	%argrw{"r"}
	assign		___383_res $const2 	%argrw{"wr"}
	return
	assign		___383_res ___383_res 	%line{73} %argrw{"wr"}
	return
	lt		$tmp135 ___383_res $const11 	%line{153} %argrw{"wrr"}
	if		$tmp135 252 255 	%argrw{"r"}
	assign		___383_res $const11 	%argrw{"wr"}
	gt		$tmp136 ___383_res $const7 	%line{154} %argrw{"wrr"}
	if		$tmp136 255 255 	%argrw{"r"}
	assign		___383_res $const7 	%argrw{"wr"}
	neq		$tmp137 $tmp37 $const11 	%line{156} %argrw{"wrr"}
	if		$tmp137 266 266 	%argrw{"r"}
	lt		$tmp138 limlev $const7 	%line{158} %argrw{"wrr"}
	if		$tmp138 266 266 	%argrw{"r"}
	add		$tmp139 limlev ___383_BLENDBAND 	%line{160} %argrw{"wrr"}
	sub		$tmp140 $tmp139 $const7 	%argrw{"wrr"}
	div		___391_u $tmp140 ___383_BLENDBAND 	%argrw{"wrr"}
	mul		$tmp141 ___391_u ___383_res 	%line{161} %argrw{"wrr"}
	sub		$tmp142 $const7 ___391_u 	%argrw{"wrr"}
	mul		$tmp143 $tmp142 avgValue 	%argrw{"wrr"}
	add		___383_res $tmp141 $tmp143 	%argrw{"wrr"}
	assign		d ___383_res 	%line{164} %argrw{"wr"}
	return
	sub		$tmp144 $const7 d 	%line{204} %argrw{"wrr"}
	mul		$tmp145 $tmp144 color1 	%argrw{"wrr"}
	mul		$tmp146 d color2 	%argrw{"wrr"}
	add		result $tmp145 $tmp146 	%argrw{"wrr"}
	sub		$tmp147 $const7 d 	%line{205} %argrw{"wrr"}
	mul		$tmp148 $tmp147 color1_alpha 	%argrw{"wrr"}
	mul		$tmp149 d color2_alpha 	%argrw{"wrr"}
	add		result_alpha $tmp148 $tmp149 	%argrw{"wrr"}
	functioncall	$const23 284 	%line{209} %argrw{"r"}
	compref		$tmp150 color1 $const1 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{28} %argrw{"wrr"}
	compref		$tmp151 color1 $const2 	%argrw{"wrr"}
	add		$tmp152 $tmp150 $tmp151 	%argrw{"wrr"}
	compref		$tmp153 color1 $const3 	%argrw{"wrr"}
	add		$tmp154 $tmp152 $tmp153 	%argrw{"wrr"}
	mul		___306_f $tmp154 $const24 	%argrw{"wrr"}
	assign		___392_a ___306_f 	%line{29} %argrw{"wr"}
	functioncall	$const23 292 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{210} %argrw{"r"}
	compref		$tmp155 color2 $const1 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{28} %argrw{"wrr"}
	compref		$tmp156 color2 $const2 	%argrw{"wrr"}
	add		$tmp157 $tmp155 $tmp156 	%argrw{"wrr"}
	compref		$tmp158 color2 $const3 	%argrw{"wrr"}
	add		$tmp159 $tmp157 $tmp158 	%argrw{"wrr"}
	mul		___306_f $tmp159 $const24 	%argrw{"wrr"}
	assign		___392_b ___306_f 	%line{29} %argrw{"wr"}
	assign		___392_del $const25 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{213} %argrw{"wr"}
	Dx		$tmp161 p 	%line{214} %argrw{"wr"} %argderivs{1}
	mul		$tmp162 ___392_del $tmp161 	%argrw{"wrr"}
	add		$tmp163 p $tmp162 	%argrw{"wrr"}
	assign		$tmp164 filter 	%argrw{"wr"}
	functioncall	$const12 505 	%argrw{"r"}
	assign		___383_BLENDBAND $const13 	%line{121} %argrw{"wr"}
	assign		___383_res $const11 	%line{122} %argrw{"wr"}
	assign		___383_lev limlev 	%line{123} %argrw{"wr"}
	sub		$tmp165 $const7 ___383_BLENDBAND 	%line{124} %argrw{"wrr"}
	lt		$tmp166 limlev $tmp165 	%argrw{"wrr"}
	if		$tmp166 306 306 	%argrw{"r"}
	assign		$tmp160 avgValue 	%argrw{"wr"}
	return
	lt		$tmp167 ___383_lev $const7 	%line{126} %argrw{"wrr"}
	if		$tmp167 309 309 	%argrw{"r"}
	assign		___383_lev $const7 	%argrw{"wr"}
	eq		$tmp168 type $const3 	%line{127} %argrw{"wrr"}
	if		$tmp168 379 424 	%argrw{"r"}
	functioncall	$const14 379 	%line{129} %argrw{"r"}
	assign		___375_sum $const11 	%line{83} %argrw{"wr"}
	assign		___375_f $const7 	%line{84} %argrw{"wr"}
	assign		___375_ml levels 	%line{85} %argrw{"wr"}
	for		$tmp169 317 318 332 333 	%line{86} %argrw{"r"}
	assign		___375_l ___383_lev 	%argrw{"wr"}
	ge		$tmp169 ___375_l $const7 	%argrw{"wrr"}
	compref		$tmp172 $tmp163 $const1 	%line{88} %argrw{"wrr"}
	mul		$tmp173 $tmp172 ___375_f 	%argrw{"wrr"}
	compref		$tmp174 $tmp163 $const2 	%argrw{"wrr"}
	mul		$tmp175 $tmp174 ___375_f 	%argrw{"wrr"}
	compref		$tmp176 $tmp163 $const3 	%argrw{"wrr"}
	mul		$tmp177 $tmp176 ___375_f 	%argrw{"wrr"}
	functioncall	$const15 327 	%argrw{"r"}
	point		$tmp178 $tmp173 $tmp175 $tmp177 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp171 $const16 $tmp178 phase 	%argrw{"wrrr"}
	fabs		$tmp170 $tmp171 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{88} %argrw{"wr"}
	div		$tmp179 $tmp170 ___375_f 	%argrw{"wrr"}
	add		___375_sum ___375_sum $tmp179 	%argrw{"wrr"}
	mul		___375_f ___375_f $const17 	%line{89} %argrw{"wrr"}
	sub		___375_ml ___375_ml $const7 	%line{90} %argrw{"wrr"}
	sub		___375_l ___375_l $const7 	%line{86} %argrw{"wrr"}
	gt		$tmp180 ___375_l $const11 	%line{92} %argrw{"wrr"}
	if		$tmp180 348 348 	%argrw{"r"}
	compref		$tmp183 $tmp163 $const1 	%argrw{"wrr"}
	mul		$tmp184 $tmp183 ___375_f 	%argrw{"wrr"}
	compref		$tmp185 $tmp163 $const2 	%argrw{"wrr"}
	mul		$tmp186 $tmp185 ___375_f 	%argrw{"wrr"}
	compref		$tmp187 $tmp163 $const3 	%argrw{"wrr"}
	mul		$tmp188 $tmp187 ___375_f 	%argrw{"wrr"}
	functioncall	$const15 344 	%argrw{"r"}
	point		$tmp189 $tmp184 $tmp186 $tmp188 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp182 $const16 $tmp189 phase 	%argrw{"wrrr"}
	fabs		$tmp181 $tmp182 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{92} %argrw{"wr"}
	mul		$tmp190 ___375_l $tmp181 	%argrw{"wrr"}
	div		$tmp191 $tmp190 ___375_f 	%argrw{"wrr"}
	add		___375_sum ___375_sum $tmp191 	%argrw{"wrr"}
	neq		$tmp192 $tmp164 $const11 	%line{94} %argrw{"wrr"}
	if		$tmp192 353 353 	%argrw{"r"}
	gt		$tmp193 ___375_ml ___375_l 	%argrw{"wrr"}
	neq		$tmp194 $tmp193 $const1 	%argrw{"wrr"}
	assign		$tmp192 $tmp194 	%argrw{"wr"}
	if		$tmp192 378 378 	%argrw{"r"}
	assign		___378_r $const1 	%line{96} %argrw{"wr"}
	lt		$tmp195 ___375_ml $const7 	%line{97} %argrw{"wrr"}
	if		$tmp195 360 378 	%argrw{"r"}
	sub		$tmp196 ___375_ml ___375_l 	%line{99} %argrw{"wrr"}
	div		$tmp197 $tmp196 ___375_f 	%argrw{"wrr"}
	add		___378_r ___378_r $tmp197 	%argrw{"wrr"}
	sub		$tmp198 $const7 ___375_l 	%line{103} %argrw{"wrr"}
	div		$tmp199 $tmp198 ___375_f 	%argrw{"wrr"}
	add		___378_r ___378_r $tmp199 	%argrw{"wrr"}
	sub		___375_ml ___375_ml $const7 	%line{104} %argrw{"wrr"}
	mul		___375_f ___375_f $const17 	%line{105} %argrw{"wrr"}
	for		$tmp200 367 368 371 372 	%line{106} %argrw{"r"}
	assign		___375_l ___375_ml 	%argrw{"wr"}
	ge		$tmp200 ___375_l $const7 	%argrw{"wrr"}
	div		$tmp201 $const7 ___375_f 	%line{108} %argrw{"wrr"}
	add		___378_r ___378_r $tmp201 	%argrw{"wrr"}
	mul		___375_f ___375_f $const17 	%line{109} %argrw{"wrr"}
	sub		___375_l ___375_l $const7 	%line{106} %argrw{"wrr"}
	gt		$tmp202 ___375_l $const11 	%line{111} %argrw{"wrr"}
	if		$tmp202 376 376 	%argrw{"r"}
	div		$tmp203 ___375_l ___375_f 	%argrw{"wrr"}
	add		___378_r ___378_r $tmp203 	%argrw{"wrr"}
	mul		$tmp204 ___378_r avgAbsNs 	%line{112} %argrw{"wrr"}
	add		___375_sum ___375_sum $tmp204 	%argrw{"wrr"}
	assign		___383_res ___375_sum 	%line{115} %argrw{"wr"}
	eq		$tmp205 type $const1 	%line{131} %argrw{"wrr"}
	if		$tmp205 390 424 	%argrw{"r"}
	functioncall	$const18 390 	%line{133} %argrw{"r"}
	compref		$tmp207 $tmp163 $const1 	%line{78} %argrw{"wrr"}
	compref		$tmp208 $tmp163 $const2 	%argrw{"wrr"}
	compref		$tmp209 $tmp163 $const3 	%argrw{"wrr"}
	functioncall	$const15 388 	%argrw{"r"}
	point		$tmp210 $tmp207 $tmp208 $tmp209 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp206 $const16 $tmp210 phase 	%argrw{"wrrr"}
	add		$tmp211 $const7 $tmp206 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{78} %argrw{"wrr"}
	mul		___383_res $tmp211 $const19 	%argrw{"wrr"}
	assign		___386_sum $const11 	%line{137} %argrw{"wr"}
	assign		___386_f $const7 	%line{138} %argrw{"wr"}
	for		$tmp212 394 395 407 408 	%line{139} %argrw{"r"}
	assign		___386_l ___383_lev 	%argrw{"wr"}
	ge		$tmp212 ___386_l $const7 	%argrw{"wrr"}
	compref		$tmp214 $tmp163 $const1 	%line{141} %argrw{"wrr"}
	mul		$tmp215 $tmp214 ___386_f 	%argrw{"wrr"}
	compref		$tmp216 $tmp163 $const2 	%argrw{"wrr"}
	mul		$tmp217 $tmp216 ___386_f 	%argrw{"wrr"}
	compref		$tmp218 $tmp163 $const3 	%argrw{"wrr"}
	mul		$tmp219 $tmp218 ___386_f 	%argrw{"wrr"}
	functioncall	$const15 404 	%argrw{"r"}
	point		$tmp220 $tmp215 $tmp217 $tmp219 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp213 $const16 $tmp220 phase 	%argrw{"wrrr"}
	div		$tmp221 $tmp213 ___386_f 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{141} %argrw{"wrr"}
	add		___386_sum ___386_sum $tmp221 	%argrw{"wrr"}
	mul		___386_f ___386_f $const17 	%line{142} %argrw{"wrr"}
	sub		___386_l ___386_l $const7 	%line{139} %argrw{"wrr"}
	gt		$tmp222 ___386_l $const11 	%line{144} %argrw{"wrr"}
	if		$tmp222 422 422 	%argrw{"r"}
	compref		$tmp224 $tmp163 $const1 	%line{145} %argrw{"wrr"}
	mul		$tmp225 $tmp224 ___386_f 	%argrw{"wrr"}
	compref		$tmp226 $tmp163 $const2 	%argrw{"wrr"}
	mul		$tmp227 $tmp226 ___386_f 	%argrw{"wrr"}
	compref		$tmp228 $tmp163 $const3 	%argrw{"wrr"}
	mul		$tmp229 $tmp228 ___386_f 	%argrw{"wrr"}
	functioncall	$const15 419 	%argrw{"r"}
	point		$tmp230 $tmp225 $tmp227 $tmp229 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp223 $const16 $tmp230 phase 	%argrw{"wrrr"}
	mul		$tmp231 ___386_l $tmp223 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{145} %argrw{"wrr"}
	div		$tmp232 $tmp231 ___386_f 	%argrw{"wrr"}
	add		___386_sum ___386_sum $tmp232 	%argrw{"wrr"}
	add		$tmp233 ___386_sum $const7 	%line{146} %argrw{"wrr"}
	mul		___383_res $const19 $tmp233 	%argrw{"wrr"}
	lt		$tmp234 thresholdLow thresholdHigh 	%line{148} %argrw{"wrr"}
	if		$tmp234 486 486 	%argrw{"r"}
	neq		$tmp235 $tmp164 $const11 	%line{150} %argrw{"wrr"}
	if		$tmp235 475 486 	%line{151} %argrw{"r"}
	functioncall	$const20 475 	%line{150} %argrw{"r"}
	sub		___366_al thresholdLow smw 	%line{25} %argrw{"wrr"}
	add		___366_ah thresholdLow smw 	%line{26} %argrw{"wrr"}
	sub		___366_bl thresholdHigh smw 	%line{27} %argrw{"wrr"}
	add		___366_bh thresholdHigh smw 	%line{28} %argrw{"wrr"}
	lt		$tmp236 ___383_res ___366_al 	%line{29} %argrw{"wrr"}
	if		$tmp236 437 437 	%argrw{"r"}
	assign		___383_res $const11 	%argrw{"wr"}
	return
	gt		$tmp237 ___383_res ___366_bh 	%line{30} %argrw{"wrr"}
	if		$tmp237 441 441 	%argrw{"r"}
	assign		___383_res $const7 	%argrw{"wr"}
	return
	lt		$tmp238 ___383_res ___366_ah 	%line{31} %argrw{"wrr"}
	if		$tmp238 455 455 	%argrw{"r"}
	sub		$tmp239 ___383_res ___366_al 	%line{33} %argrw{"wrr"}
	sub		$tmp240 ___366_ah ___366_al 	%argrw{"wrr"}
	div		___367_u $tmp239 $tmp240 	%argrw{"wrr"}
	mul		$tmp241 ___367_u ___367_u 	%line{34} %argrw{"wrr"}
	mul		$tmp242 $const17 ___367_u 	%argrw{"wrr"}
	sub		$tmp243 $const6 $tmp242 	%argrw{"wrr"}
	mul		___367_u $tmp241 $tmp243 	%argrw{"wrr"}
	sub		$tmp244 ___383_res thresholdLow 	%line{35} %argrw{"wrr"}
	mul		$tmp245 ___367_u $tmp244 	%argrw{"wrr"}
	sub		$tmp246 thresholdHigh thresholdLow 	%argrw{"wrr"}
	div		___383_res $tmp245 $tmp246 	%argrw{"wrr"}
	return
	lt		$tmp247 ___383_res ___366_bl 	%line{37} %argrw{"wrr"}
	if		$tmp247 461 475 	%argrw{"r"}
	sub		$tmp248 ___383_res thresholdLow 	%line{39} %argrw{"wrr"}
	sub		$tmp249 thresholdHigh thresholdLow 	%argrw{"wrr"}
	div		___383_res $tmp248 $tmp249 	%argrw{"wrr"}
	return
	sub		$tmp250 ___383_res ___366_bl 	%line{43} %argrw{"wrr"}
	sub		$tmp251 ___366_bh ___366_bl 	%argrw{"wrr"}
	div		___369_u $tmp250 $tmp251 	%argrw{"wrr"}
	mul		$tmp252 ___369_u ___369_u 	%line{44} %argrw{"wrr"}
	mul		$tmp253 $const17 ___369_u 	%argrw{"wrr"}
	sub		$tmp254 $const6 $tmp253 	%argrw{"wrr"}
	mul		___369_u $tmp252 $tmp254 	%argrw{"wrr"}
	sub		$tmp255 $const7 ___369_u 	%line{45} %argrw{"wrr"}
	sub		$tmp256 ___383_res thresholdLow 	%argrw{"wrr"}
	mul		$tmp257 $tmp255 $tmp256 	%argrw{"wrr"}
	sub		$tmp258 thresholdHigh thresholdLow 	%argrw{"wrr"}
	div		$tmp259 $tmp257 $tmp258 	%argrw{"wrr"}
	add		___383_res $tmp259 ___369_u 	%argrw{"wrr"}
	return
	functioncall	$const22 486 	%line{151} %argrw{"r"}
	lt		$tmp260 ___383_res thresholdLow 	%line{71} %argrw{"wrr"}
	if		$tmp260 480 486 	%argrw{"r"}
	assign		___383_res $const1 	%argrw{"wr"}
	return
	gt		$tmp261 ___383_res thresholdHigh 	%line{72} %argrw{"wrr"}
	if		$tmp261 484 486 	%argrw{"r"}
	assign		___383_res $const2 	%argrw{"wr"}
	return
	assign		___383_res ___383_res 	%line{73} %argrw{"wr"}
	return
	lt		$tmp262 ___383_res $const11 	%line{153} %argrw{"wrr"}
	if		$tmp262 489 492 	%argrw{"r"}
	assign		___383_res $const11 	%argrw{"wr"}
	gt		$tmp263 ___383_res $const7 	%line{154} %argrw{"wrr"}
	if		$tmp263 492 492 	%argrw{"r"}
	assign		___383_res $const7 	%argrw{"wr"}
	neq		$tmp264 $tmp164 $const11 	%line{156} %argrw{"wrr"}
	if		$tmp264 503 503 	%argrw{"r"}
	lt		$tmp265 limlev $const7 	%line{158} %argrw{"wrr"}
	if		$tmp265 503 503 	%argrw{"r"}
	add		$tmp266 limlev ___383_BLENDBAND 	%line{160} %argrw{"wrr"}
	sub		$tmp267 $tmp266 $const7 	%argrw{"wrr"}
	div		___391_u $tmp267 ___383_BLENDBAND 	%argrw{"wrr"}
	mul		$tmp268 ___391_u ___383_res 	%line{161} %argrw{"wrr"}
	sub		$tmp269 $const7 ___391_u 	%argrw{"wrr"}
	mul		$tmp270 $tmp269 avgValue 	%argrw{"wrr"}
	add		___383_res $tmp268 $tmp270 	%argrw{"wrr"}
	assign		$tmp160 ___383_res 	%line{164} %argrw{"wr"}
	return
	sub		$tmp271 $tmp160 d 	%line{214} %argrw{"wrr"}
	div		$tmp272 $tmp271 ___392_del 	%argrw{"wrr"}
	compassign	___392_np $const1 $tmp272 	%argrw{"wrr"}
	Dy		$tmp274 p 	%line{215} %argrw{"wr"} %argderivs{1}
	mul		$tmp275 ___392_del $tmp274 	%argrw{"wrr"}
	add		$tmp276 p $tmp275 	%argrw{"wrr"}
	assign		$tmp277 filter 	%argrw{"wr"}
	functioncall	$const12 720 	%argrw{"r"}
	assign		___383_BLENDBAND $const13 	%line{121} %argrw{"wr"}
	assign		___383_res $const11 	%line{122} %argrw{"wr"}
	assign		___383_lev limlev 	%line{123} %argrw{"wr"}
	sub		$tmp278 $const7 ___383_BLENDBAND 	%line{124} %argrw{"wrr"}
	lt		$tmp279 limlev $tmp278 	%argrw{"wrr"}
	if		$tmp279 521 521 	%argrw{"r"}
	assign		$tmp273 avgValue 	%argrw{"wr"}
	return
	lt		$tmp280 ___383_lev $const7 	%line{126} %argrw{"wrr"}
	if		$tmp280 524 524 	%argrw{"r"}
	assign		___383_lev $const7 	%argrw{"wr"}
	eq		$tmp281 type $const3 	%line{127} %argrw{"wrr"}
	if		$tmp281 594 639 	%argrw{"r"}
	functioncall	$const14 594 	%line{129} %argrw{"r"}
	assign		___375_sum $const11 	%line{83} %argrw{"wr"}
	assign		___375_f $const7 	%line{84} %argrw{"wr"}
	assign		___375_ml levels 	%line{85} %argrw{"wr"}
	for		$tmp282 532 533 547 548 	%line{86} %argrw{"r"}
	assign		___375_l ___383_lev 	%argrw{"wr"}
	ge		$tmp282 ___375_l $const7 	%argrw{"wrr"}
	compref		$tmp285 $tmp276 $const1 	%line{88} %argrw{"wrr"}
	mul		$tmp286 $tmp285 ___375_f 	%argrw{"wrr"}
	compref		$tmp287 $tmp276 $const2 	%argrw{"wrr"}
	mul		$tmp288 $tmp287 ___375_f 	%argrw{"wrr"}
	compref		$tmp289 $tmp276 $const3 	%argrw{"wrr"}
	mul		$tmp290 $tmp289 ___375_f 	%argrw{"wrr"}
	functioncall	$const15 542 	%argrw{"r"}
	point		$tmp291 $tmp286 $tmp288 $tmp290 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp284 $const16 $tmp291 phase 	%argrw{"wrrr"}
	fabs		$tmp283 $tmp284 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{88} %argrw{"wr"}
	div		$tmp292 $tmp283 ___375_f 	%argrw{"wrr"}
	add		___375_sum ___375_sum $tmp292 	%argrw{"wrr"}
	mul		___375_f ___375_f $const17 	%line{89} %argrw{"wrr"}
	sub		___375_ml ___375_ml $const7 	%line{90} %argrw{"wrr"}
	sub		___375_l ___375_l $const7 	%line{86} %argrw{"wrr"}
	gt		$tmp293 ___375_l $const11 	%line{92} %argrw{"wrr"}
	if		$tmp293 563 563 	%argrw{"r"}
	compref		$tmp296 $tmp276 $const1 	%argrw{"wrr"}
	mul		$tmp297 $tmp296 ___375_f 	%argrw{"wrr"}
	compref		$tmp298 $tmp276 $const2 	%argrw{"wrr"}
	mul		$tmp299 $tmp298 ___375_f 	%argrw{"wrr"}
	compref		$tmp300 $tmp276 $const3 	%argrw{"wrr"}
	mul		$tmp301 $tmp300 ___375_f 	%argrw{"wrr"}
	functioncall	$const15 559 	%argrw{"r"}
	point		$tmp302 $tmp297 $tmp299 $tmp301 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp295 $const16 $tmp302 phase 	%argrw{"wrrr"}
	fabs		$tmp294 $tmp295 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{92} %argrw{"wr"}
	mul		$tmp303 ___375_l $tmp294 	%argrw{"wrr"}
	div		$tmp304 $tmp303 ___375_f 	%argrw{"wrr"}
	add		___375_sum ___375_sum $tmp304 	%argrw{"wrr"}
	neq		$tmp305 $tmp277 $const11 	%line{94} %argrw{"wrr"}
	if		$tmp305 568 568 	%argrw{"r"}
	gt		$tmp306 ___375_ml ___375_l 	%argrw{"wrr"}
	neq		$tmp307 $tmp306 $const1 	%argrw{"wrr"}
	assign		$tmp305 $tmp307 	%argrw{"wr"}
	if		$tmp305 593 593 	%argrw{"r"}
	assign		___378_r $const1 	%line{96} %argrw{"wr"}
	lt		$tmp308 ___375_ml $const7 	%line{97} %argrw{"wrr"}
	if		$tmp308 575 593 	%argrw{"r"}
	sub		$tmp309 ___375_ml ___375_l 	%line{99} %argrw{"wrr"}
	div		$tmp310 $tmp309 ___375_f 	%argrw{"wrr"}
	add		___378_r ___378_r $tmp310 	%argrw{"wrr"}
	sub		$tmp311 $const7 ___375_l 	%line{103} %argrw{"wrr"}
	div		$tmp312 $tmp311 ___375_f 	%argrw{"wrr"}
	add		___378_r ___378_r $tmp312 	%argrw{"wrr"}
	sub		___375_ml ___375_ml $const7 	%line{104} %argrw{"wrr"}
	mul		___375_f ___375_f $const17 	%line{105} %argrw{"wrr"}
	for		$tmp313 582 583 586 587 	%line{106} %argrw{"r"}
	assign		___375_l ___375_ml 	%argrw{"wr"}
	ge		$tmp313 ___375_l $const7 	%argrw{"wrr"}
	div		$tmp314 $const7 ___375_f 	%line{108} %argrw{"wrr"}
	add		___378_r ___378_r $tmp314 	%argrw{"wrr"}
	mul		___375_f ___375_f $const17 	%line{109} %argrw{"wrr"}
	sub		___375_l ___375_l $const7 	%line{106} %argrw{"wrr"}
	gt		$tmp315 ___375_l $const11 	%line{111} %argrw{"wrr"}
	if		$tmp315 591 591 	%argrw{"r"}
	div		$tmp316 ___375_l ___375_f 	%argrw{"wrr"}
	add		___378_r ___378_r $tmp316 	%argrw{"wrr"}
	mul		$tmp317 ___378_r avgAbsNs 	%line{112} %argrw{"wrr"}
	add		___375_sum ___375_sum $tmp317 	%argrw{"wrr"}
	assign		___383_res ___375_sum 	%line{115} %argrw{"wr"}
	eq		$tmp318 type $const1 	%line{131} %argrw{"wrr"}
	if		$tmp318 605 639 	%argrw{"r"}
	functioncall	$const18 605 	%line{133} %argrw{"r"}
	compref		$tmp320 $tmp276 $const1 	%line{78} %argrw{"wrr"}
	compref		$tmp321 $tmp276 $const2 	%argrw{"wrr"}
	compref		$tmp322 $tmp276 $const3 	%argrw{"wrr"}
	functioncall	$const15 603 	%argrw{"r"}
	point		$tmp323 $tmp320 $tmp321 $tmp322 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp319 $const16 $tmp323 phase 	%argrw{"wrrr"}
	add		$tmp324 $const7 $tmp319 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{78} %argrw{"wrr"}
	mul		___383_res $tmp324 $const19 	%argrw{"wrr"}
	assign		___386_sum $const11 	%line{137} %argrw{"wr"}
	assign		___386_f $const7 	%line{138} %argrw{"wr"}
	for		$tmp325 609 610 622 623 	%line{139} %argrw{"r"}
	assign		___386_l ___383_lev 	%argrw{"wr"}
	ge		$tmp325 ___386_l $const7 	%argrw{"wrr"}
	compref		$tmp327 $tmp276 $const1 	%line{141} %argrw{"wrr"}
	mul		$tmp328 $tmp327 ___386_f 	%argrw{"wrr"}
	compref		$tmp329 $tmp276 $const2 	%argrw{"wrr"}
	mul		$tmp330 $tmp329 ___386_f 	%argrw{"wrr"}
	compref		$tmp331 $tmp276 $const3 	%argrw{"wrr"}
	mul		$tmp332 $tmp331 ___386_f 	%argrw{"wrr"}
	functioncall	$const15 619 	%argrw{"r"}
	point		$tmp333 $tmp328 $tmp330 $tmp332 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp326 $const16 $tmp333 phase 	%argrw{"wrrr"}
	div		$tmp334 $tmp326 ___386_f 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{141} %argrw{"wrr"}
	add		___386_sum ___386_sum $tmp334 	%argrw{"wrr"}
	mul		___386_f ___386_f $const17 	%line{142} %argrw{"wrr"}
	sub		___386_l ___386_l $const7 	%line{139} %argrw{"wrr"}
	gt		$tmp335 ___386_l $const11 	%line{144} %argrw{"wrr"}
	if		$tmp335 637 637 	%argrw{"r"}
	compref		$tmp337 $tmp276 $const1 	%line{145} %argrw{"wrr"}
	mul		$tmp338 $tmp337 ___386_f 	%argrw{"wrr"}
	compref		$tmp339 $tmp276 $const2 	%argrw{"wrr"}
	mul		$tmp340 $tmp339 ___386_f 	%argrw{"wrr"}
	compref		$tmp341 $tmp276 $const3 	%argrw{"wrr"}
	mul		$tmp342 $tmp341 ___386_f 	%argrw{"wrr"}
	functioncall	$const15 634 	%argrw{"r"}
	point		$tmp343 $tmp338 $tmp340 $tmp342 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp336 $const16 $tmp343 phase 	%argrw{"wrrr"}
	mul		$tmp344 ___386_l $tmp336 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{145} %argrw{"wrr"}
	div		$tmp345 $tmp344 ___386_f 	%argrw{"wrr"}
	add		___386_sum ___386_sum $tmp345 	%argrw{"wrr"}
	add		$tmp346 ___386_sum $const7 	%line{146} %argrw{"wrr"}
	mul		___383_res $const19 $tmp346 	%argrw{"wrr"}
	lt		$tmp347 thresholdLow thresholdHigh 	%line{148} %argrw{"wrr"}
	if		$tmp347 701 701 	%argrw{"r"}
	neq		$tmp348 $tmp277 $const11 	%line{150} %argrw{"wrr"}
	if		$tmp348 690 701 	%line{151} %argrw{"r"}
	functioncall	$const20 690 	%line{150} %argrw{"r"}
	sub		___366_al thresholdLow smw 	%line{25} %argrw{"wrr"}
	add		___366_ah thresholdLow smw 	%line{26} %argrw{"wrr"}
	sub		___366_bl thresholdHigh smw 	%line{27} %argrw{"wrr"}
	add		___366_bh thresholdHigh smw 	%line{28} %argrw{"wrr"}
	lt		$tmp349 ___383_res ___366_al 	%line{29} %argrw{"wrr"}
	if		$tmp349 652 652 	%argrw{"r"}
	assign		___383_res $const11 	%argrw{"wr"}
	return
	gt		$tmp350 ___383_res ___366_bh 	%line{30} %argrw{"wrr"}
	if		$tmp350 656 656 	%argrw{"r"}
	assign		___383_res $const7 	%argrw{"wr"}
	return
	lt		$tmp351 ___383_res ___366_ah 	%line{31} %argrw{"wrr"}
	if		$tmp351 670 670 	%argrw{"r"}
	sub		$tmp352 ___383_res ___366_al 	%line{33} %argrw{"wrr"}
	sub		$tmp353 ___366_ah ___366_al 	%argrw{"wrr"}
	div		___367_u $tmp352 $tmp353 	%argrw{"wrr"}
	mul		$tmp354 ___367_u ___367_u 	%line{34} %argrw{"wrr"}
	mul		$tmp355 $const17 ___367_u 	%argrw{"wrr"}
	sub		$tmp356 $const6 $tmp355 	%argrw{"wrr"}
	mul		___367_u $tmp354 $tmp356 	%argrw{"wrr"}
	sub		$tmp357 ___383_res thresholdLow 	%line{35} %argrw{"wrr"}
	mul		$tmp358 ___367_u $tmp357 	%argrw{"wrr"}
	sub		$tmp359 thresholdHigh thresholdLow 	%argrw{"wrr"}
	div		___383_res $tmp358 $tmp359 	%argrw{"wrr"}
	return
	lt		$tmp360 ___383_res ___366_bl 	%line{37} %argrw{"wrr"}
	if		$tmp360 676 690 	%argrw{"r"}
	sub		$tmp361 ___383_res thresholdLow 	%line{39} %argrw{"wrr"}
	sub		$tmp362 thresholdHigh thresholdLow 	%argrw{"wrr"}
	div		___383_res $tmp361 $tmp362 	%argrw{"wrr"}
	return
	sub		$tmp363 ___383_res ___366_bl 	%line{43} %argrw{"wrr"}
	sub		$tmp364 ___366_bh ___366_bl 	%argrw{"wrr"}
	div		___369_u $tmp363 $tmp364 	%argrw{"wrr"}
	mul		$tmp365 ___369_u ___369_u 	%line{44} %argrw{"wrr"}
	mul		$tmp366 $const17 ___369_u 	%argrw{"wrr"}
	sub		$tmp367 $const6 $tmp366 	%argrw{"wrr"}
	mul		___369_u $tmp365 $tmp367 	%argrw{"wrr"}
	sub		$tmp368 $const7 ___369_u 	%line{45} %argrw{"wrr"}
	sub		$tmp369 ___383_res thresholdLow 	%argrw{"wrr"}
	mul		$tmp370 $tmp368 $tmp369 	%argrw{"wrr"}
	sub		$tmp371 thresholdHigh thresholdLow 	%argrw{"wrr"}
	div		$tmp372 $tmp370 $tmp371 	%argrw{"wrr"}
	add		___383_res $tmp372 ___369_u 	%argrw{"wrr"}
	return
	functioncall	$const22 701 	%line{151} %argrw{"r"}
	lt		$tmp373 ___383_res thresholdLow 	%line{71} %argrw{"wrr"}
	if		$tmp373 695 701 	%argrw{"r"}
	assign		___383_res $const1 	%argrw{"wr"}
	return
	gt		$tmp374 ___383_res thresholdHigh 	%line{72} %argrw{"wrr"}
	if		$tmp374 699 701 	%argrw{"r"}
	assign		___383_res $const2 	%argrw{"wr"}
	return
	assign		___383_res ___383_res 	%line{73} %argrw{"wr"}
	return
	lt		$tmp375 ___383_res $const11 	%line{153} %argrw{"wrr"}
	if		$tmp375 704 707 	%argrw{"r"}
	assign		___383_res $const11 	%argrw{"wr"}
	gt		$tmp376 ___383_res $const7 	%line{154} %argrw{"wrr"}
	if		$tmp376 707 707 	%argrw{"r"}
	assign		___383_res $const7 	%argrw{"wr"}
	neq		$tmp377 $tmp277 $const11 	%line{156} %argrw{"wrr"}
	if		$tmp377 718 718 	%argrw{"r"}
	lt		$tmp378 limlev $const7 	%line{158} %argrw{"wrr"}
	if		$tmp378 718 718 	%argrw{"r"}
	add		$tmp379 limlev ___383_BLENDBAND 	%line{160} %argrw{"wrr"}
	sub		$tmp380 $tmp379 $const7 	%argrw{"wrr"}
	div		___391_u $tmp380 ___383_BLENDBAND 	%argrw{"wrr"}
	mul		$tmp381 ___391_u ___383_res 	%line{161} %argrw{"wrr"}
	sub		$tmp382 $const7 ___391_u 	%argrw{"wrr"}
	mul		$tmp383 $tmp382 avgValue 	%argrw{"wrr"}
	add		___383_res $tmp381 $tmp383 	%argrw{"wrr"}
	assign		$tmp273 ___383_res 	%line{164} %argrw{"wr"}
	return
	sub		$tmp384 $tmp273 d 	%line{215} %argrw{"wrr"}
	div		$tmp385 $tmp384 ___392_del 	%argrw{"wrr"}
	compassign	___392_np $const2 $tmp385 	%argrw{"wrr"}
	Dz		$tmp387 p 	%line{216} %argrw{"wr"} %argderivs{1}
	mul		$tmp388 ___392_del $tmp387 	%argrw{"wrr"}
	add		$tmp389 p $tmp388 	%argrw{"wrr"}
	assign		$tmp390 filter 	%argrw{"wr"}
	functioncall	$const12 935 	%argrw{"r"}
	assign		___383_BLENDBAND $const13 	%line{121} %argrw{"wr"}
	assign		___383_res $const11 	%line{122} %argrw{"wr"}
	assign		___383_lev limlev 	%line{123} %argrw{"wr"}
	sub		$tmp391 $const7 ___383_BLENDBAND 	%line{124} %argrw{"wrr"}
	lt		$tmp392 limlev $tmp391 	%argrw{"wrr"}
	if		$tmp392 736 736 	%argrw{"r"}
	assign		$tmp386 avgValue 	%argrw{"wr"}
	return
	lt		$tmp393 ___383_lev $const7 	%line{126} %argrw{"wrr"}
	if		$tmp393 739 739 	%argrw{"r"}
	assign		___383_lev $const7 	%argrw{"wr"}
	eq		$tmp394 type $const3 	%line{127} %argrw{"wrr"}
	if		$tmp394 809 854 	%argrw{"r"}
	functioncall	$const14 809 	%line{129} %argrw{"r"}
	assign		___375_sum $const11 	%line{83} %argrw{"wr"}
	assign		___375_f $const7 	%line{84} %argrw{"wr"}
	assign		___375_ml levels 	%line{85} %argrw{"wr"}
	for		$tmp395 747 748 762 763 	%line{86} %argrw{"r"}
	assign		___375_l ___383_lev 	%argrw{"wr"}
	ge		$tmp395 ___375_l $const7 	%argrw{"wrr"}
	compref		$tmp398 $tmp389 $const1 	%line{88} %argrw{"wrr"}
	mul		$tmp399 $tmp398 ___375_f 	%argrw{"wrr"}
	compref		$tmp400 $tmp389 $const2 	%argrw{"wrr"}
	mul		$tmp401 $tmp400 ___375_f 	%argrw{"wrr"}
	compref		$tmp402 $tmp389 $const3 	%argrw{"wrr"}
	mul		$tmp403 $tmp402 ___375_f 	%argrw{"wrr"}
	functioncall	$const15 757 	%argrw{"r"}
	point		$tmp404 $tmp399 $tmp401 $tmp403 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp397 $const16 $tmp404 phase 	%argrw{"wrrr"}
	fabs		$tmp396 $tmp397 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{88} %argrw{"wr"}
	div		$tmp405 $tmp396 ___375_f 	%argrw{"wrr"}
	add		___375_sum ___375_sum $tmp405 	%argrw{"wrr"}
	mul		___375_f ___375_f $const17 	%line{89} %argrw{"wrr"}
	sub		___375_ml ___375_ml $const7 	%line{90} %argrw{"wrr"}
	sub		___375_l ___375_l $const7 	%line{86} %argrw{"wrr"}
	gt		$tmp406 ___375_l $const11 	%line{92} %argrw{"wrr"}
	if		$tmp406 778 778 	%argrw{"r"}
	compref		$tmp409 $tmp389 $const1 	%argrw{"wrr"}
	mul		$tmp410 $tmp409 ___375_f 	%argrw{"wrr"}
	compref		$tmp411 $tmp389 $const2 	%argrw{"wrr"}
	mul		$tmp412 $tmp411 ___375_f 	%argrw{"wrr"}
	compref		$tmp413 $tmp389 $const3 	%argrw{"wrr"}
	mul		$tmp414 $tmp413 ___375_f 	%argrw{"wrr"}
	functioncall	$const15 774 	%argrw{"r"}
	point		$tmp415 $tmp410 $tmp412 $tmp414 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp408 $const16 $tmp415 phase 	%argrw{"wrrr"}
	fabs		$tmp407 $tmp408 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{92} %argrw{"wr"}
	mul		$tmp416 ___375_l $tmp407 	%argrw{"wrr"}
	div		$tmp417 $tmp416 ___375_f 	%argrw{"wrr"}
	add		___375_sum ___375_sum $tmp417 	%argrw{"wrr"}
	neq		$tmp418 $tmp390 $const11 	%line{94} %argrw{"wrr"}
	if		$tmp418 783 783 	%argrw{"r"}
	gt		$tmp419 ___375_ml ___375_l 	%argrw{"wrr"}
	neq		$tmp420 $tmp419 $const1 	%argrw{"wrr"}
	assign		$tmp418 $tmp420 	%argrw{"wr"}
	if		$tmp418 808 808 	%argrw{"r"}
	assign		___378_r $const1 	%line{96} %argrw{"wr"}
	lt		$tmp421 ___375_ml $const7 	%line{97} %argrw{"wrr"}
	if		$tmp421 790 808 	%argrw{"r"}
	sub		$tmp422 ___375_ml ___375_l 	%line{99} %argrw{"wrr"}
	div		$tmp423 $tmp422 ___375_f 	%argrw{"wrr"}
	add		___378_r ___378_r $tmp423 	%argrw{"wrr"}
	sub		$tmp424 $const7 ___375_l 	%line{103} %argrw{"wrr"}
	div		$tmp425 $tmp424 ___375_f 	%argrw{"wrr"}
	add		___378_r ___378_r $tmp425 	%argrw{"wrr"}
	sub		___375_ml ___375_ml $const7 	%line{104} %argrw{"wrr"}
	mul		___375_f ___375_f $const17 	%line{105} %argrw{"wrr"}
	for		$tmp426 797 798 801 802 	%line{106} %argrw{"r"}
	assign		___375_l ___375_ml 	%argrw{"wr"}
	ge		$tmp426 ___375_l $const7 	%argrw{"wrr"}
	div		$tmp427 $const7 ___375_f 	%line{108} %argrw{"wrr"}
	add		___378_r ___378_r $tmp427 	%argrw{"wrr"}
	mul		___375_f ___375_f $const17 	%line{109} %argrw{"wrr"}
	sub		___375_l ___375_l $const7 	%line{106} %argrw{"wrr"}
	gt		$tmp428 ___375_l $const11 	%line{111} %argrw{"wrr"}
	if		$tmp428 806 806 	%argrw{"r"}
	div		$tmp429 ___375_l ___375_f 	%argrw{"wrr"}
	add		___378_r ___378_r $tmp429 	%argrw{"wrr"}
	mul		$tmp430 ___378_r avgAbsNs 	%line{112} %argrw{"wrr"}
	add		___375_sum ___375_sum $tmp430 	%argrw{"wrr"}
	assign		___383_res ___375_sum 	%line{115} %argrw{"wr"}
	eq		$tmp431 type $const1 	%line{131} %argrw{"wrr"}
	if		$tmp431 820 854 	%argrw{"r"}
	functioncall	$const18 820 	%line{133} %argrw{"r"}
	compref		$tmp433 $tmp389 $const1 	%line{78} %argrw{"wrr"}
	compref		$tmp434 $tmp389 $const2 	%argrw{"wrr"}
	compref		$tmp435 $tmp389 $const3 	%argrw{"wrr"}
	functioncall	$const15 818 	%argrw{"r"}
	point		$tmp436 $tmp433 $tmp434 $tmp435 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp432 $const16 $tmp436 phase 	%argrw{"wrrr"}
	add		$tmp437 $const7 $tmp432 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{78} %argrw{"wrr"}
	mul		___383_res $tmp437 $const19 	%argrw{"wrr"}
	assign		___386_sum $const11 	%line{137} %argrw{"wr"}
	assign		___386_f $const7 	%line{138} %argrw{"wr"}
	for		$tmp438 824 825 837 838 	%line{139} %argrw{"r"}
	assign		___386_l ___383_lev 	%argrw{"wr"}
	ge		$tmp438 ___386_l $const7 	%argrw{"wrr"}
	compref		$tmp440 $tmp389 $const1 	%line{141} %argrw{"wrr"}
	mul		$tmp441 $tmp440 ___386_f 	%argrw{"wrr"}
	compref		$tmp442 $tmp389 $const2 	%argrw{"wrr"}
	mul		$tmp443 $tmp442 ___386_f 	%argrw{"wrr"}
	compref		$tmp444 $tmp389 $const3 	%argrw{"wrr"}
	mul		$tmp445 $tmp444 ___386_f 	%argrw{"wrr"}
	functioncall	$const15 834 	%argrw{"r"}
	point		$tmp446 $tmp441 $tmp443 $tmp445 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp439 $const16 $tmp446 phase 	%argrw{"wrrr"}
	div		$tmp447 $tmp439 ___386_f 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{141} %argrw{"wrr"}
	add		___386_sum ___386_sum $tmp447 	%argrw{"wrr"}
	mul		___386_f ___386_f $const17 	%line{142} %argrw{"wrr"}
	sub		___386_l ___386_l $const7 	%line{139} %argrw{"wrr"}
	gt		$tmp448 ___386_l $const11 	%line{144} %argrw{"wrr"}
	if		$tmp448 852 852 	%argrw{"r"}
	compref		$tmp450 $tmp389 $const1 	%line{145} %argrw{"wrr"}
	mul		$tmp451 $tmp450 ___386_f 	%argrw{"wrr"}
	compref		$tmp452 $tmp389 $const2 	%argrw{"wrr"}
	mul		$tmp453 $tmp452 ___386_f 	%argrw{"wrr"}
	compref		$tmp454 $tmp389 $const3 	%argrw{"wrr"}
	mul		$tmp455 $tmp454 ___386_f 	%argrw{"wrr"}
	functioncall	$const15 849 	%argrw{"r"}
	point		$tmp456 $tmp451 $tmp453 $tmp455 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{163} %argrw{"wrrr"}
	noise		$tmp449 $const16 $tmp456 phase 	%argrw{"wrrr"}
	mul		$tmp457 ___386_l $tmp449 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{145} %argrw{"wrr"}
	div		$tmp458 $tmp457 ___386_f 	%argrw{"wrr"}
	add		___386_sum ___386_sum $tmp458 	%argrw{"wrr"}
	add		$tmp459 ___386_sum $const7 	%line{146} %argrw{"wrr"}
	mul		___383_res $const19 $tmp459 	%argrw{"wrr"}
	lt		$tmp460 thresholdLow thresholdHigh 	%line{148} %argrw{"wrr"}
	if		$tmp460 916 916 	%argrw{"r"}
	neq		$tmp461 $tmp390 $const11 	%line{150} %argrw{"wrr"}
	if		$tmp461 905 916 	%line{151} %argrw{"r"}
	functioncall	$const20 905 	%line{150} %argrw{"r"}
	sub		___366_al thresholdLow smw 	%line{25} %argrw{"wrr"}
	add		___366_ah thresholdLow smw 	%line{26} %argrw{"wrr"}
	sub		___366_bl thresholdHigh smw 	%line{27} %argrw{"wrr"}
	add		___366_bh thresholdHigh smw 	%line{28} %argrw{"wrr"}
	lt		$tmp462 ___383_res ___366_al 	%line{29} %argrw{"wrr"}
	if		$tmp462 867 867 	%argrw{"r"}
	assign		___383_res $const11 	%argrw{"wr"}
	return
	gt		$tmp463 ___383_res ___366_bh 	%line{30} %argrw{"wrr"}
	if		$tmp463 871 871 	%argrw{"r"}
	assign		___383_res $const7 	%argrw{"wr"}
	return
	lt		$tmp464 ___383_res ___366_ah 	%line{31} %argrw{"wrr"}
	if		$tmp464 885 885 	%argrw{"r"}
	sub		$tmp465 ___383_res ___366_al 	%line{33} %argrw{"wrr"}
	sub		$tmp466 ___366_ah ___366_al 	%argrw{"wrr"}
	div		___367_u $tmp465 $tmp466 	%argrw{"wrr"}
	mul		$tmp467 ___367_u ___367_u 	%line{34} %argrw{"wrr"}
	mul		$tmp468 $const17 ___367_u 	%argrw{"wrr"}
	sub		$tmp469 $const6 $tmp468 	%argrw{"wrr"}
	mul		___367_u $tmp467 $tmp469 	%argrw{"wrr"}
	sub		$tmp470 ___383_res thresholdLow 	%line{35} %argrw{"wrr"}
	mul		$tmp471 ___367_u $tmp470 	%argrw{"wrr"}
	sub		$tmp472 thresholdHigh thresholdLow 	%argrw{"wrr"}
	div		___383_res $tmp471 $tmp472 	%argrw{"wrr"}
	return
	lt		$tmp473 ___383_res ___366_bl 	%line{37} %argrw{"wrr"}
	if		$tmp473 891 905 	%argrw{"r"}
	sub		$tmp474 ___383_res thresholdLow 	%line{39} %argrw{"wrr"}
	sub		$tmp475 thresholdHigh thresholdLow 	%argrw{"wrr"}
	div		___383_res $tmp474 $tmp475 	%argrw{"wrr"}
	return
	sub		$tmp476 ___383_res ___366_bl 	%line{43} %argrw{"wrr"}
	sub		$tmp477 ___366_bh ___366_bl 	%argrw{"wrr"}
	div		___369_u $tmp476 $tmp477 	%argrw{"wrr"}
	mul		$tmp478 ___369_u ___369_u 	%line{44} %argrw{"wrr"}
	mul		$tmp479 $const17 ___369_u 	%argrw{"wrr"}
	sub		$tmp480 $const6 $tmp479 	%argrw{"wrr"}
	mul		___369_u $tmp478 $tmp480 	%argrw{"wrr"}
	sub		$tmp481 $const7 ___369_u 	%line{45} %argrw{"wrr"}
	sub		$tmp482 ___383_res thresholdLow 	%argrw{"wrr"}
	mul		$tmp483 $tmp481 $tmp482 	%argrw{"wrr"}
	sub		$tmp484 thresholdHigh thresholdLow 	%argrw{"wrr"}
	div		$tmp485 $tmp483 $tmp484 	%argrw{"wrr"}
	add		___383_res $tmp485 ___369_u 	%argrw{"wrr"}
	return
	functioncall	$const22 916 	%line{151} %argrw{"r"}
	lt		$tmp486 ___383_res thresholdLow 	%line{71} %argrw{"wrr"}
	if		$tmp486 910 916 	%argrw{"r"}
	assign		___383_res $const1 	%argrw{"wr"}
	return
	gt		$tmp487 ___383_res thresholdHigh 	%line{72} %argrw{"wrr"}
	if		$tmp487 914 916 	%argrw{"r"}
	assign		___383_res $const2 	%argrw{"wr"}
	return
	assign		___383_res ___383_res 	%line{73} %argrw{"wr"}
	return
	lt		$tmp488 ___383_res $const11 	%line{153} %argrw{"wrr"}
	if		$tmp488 919 922 	%argrw{"r"}
	assign		___383_res $const11 	%argrw{"wr"}
	gt		$tmp489 ___383_res $const7 	%line{154} %argrw{"wrr"}
	if		$tmp489 922 922 	%argrw{"r"}
	assign		___383_res $const7 	%argrw{"wr"}
	neq		$tmp490 $tmp390 $const11 	%line{156} %argrw{"wrr"}
	if		$tmp490 933 933 	%argrw{"r"}
	lt		$tmp491 limlev $const7 	%line{158} %argrw{"wrr"}
	if		$tmp491 933 933 	%argrw{"r"}
	add		$tmp492 limlev ___383_BLENDBAND 	%line{160} %argrw{"wrr"}
	sub		$tmp493 $tmp492 $const7 	%argrw{"wrr"}
	div		___391_u $tmp493 ___383_BLENDBAND 	%argrw{"wrr"}
	mul		$tmp494 ___391_u ___383_res 	%line{161} %argrw{"wrr"}
	sub		$tmp495 $const7 ___391_u 	%argrw{"wrr"}
	mul		$tmp496 $tmp495 avgValue 	%argrw{"wrr"}
	add		___383_res $tmp494 $tmp496 	%argrw{"wrr"}
	assign		$tmp386 ___383_res 	%line{164} %argrw{"wr"}
	return
	sub		$tmp497 $tmp386 d 	%line{216} %argrw{"wrr"}
	div		$tmp498 $tmp497 ___392_del 	%argrw{"wrr"}
	compassign	___392_np $const3 $tmp498 	%argrw{"wrr"}
	mul		___392_np ___392_np $const27 	%line{217} %argrw{"wrr"}
	eq		$tmp499 color1Enabled $const2 	%line{219} %argrw{"wrr"}
	neq		$tmp500 $tmp499 $const1 	%argrw{"wrr"}
	if		$tmp500 942 945 	%argrw{"r"}
	eq		$tmp501 color2Enabled $const2 	%argrw{"wrr"}
	neq		$tmp502 $tmp501 $const1 	%argrw{"wrr"}
	assign		$tmp500 $tmp502 	%argrw{"wr"}
	if		$tmp500 960 962 	%argrw{"r"}
	sub		$tmp503 ___392_b ___392_a 	%line{221} %argrw{"wrr"}
	mul		$tmp504 ___392_np $tmp503 	%argrw{"wrr"}
	functioncall	$const23 956 	%argrw{"r"}
	compref		$tmp506 result $const1 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{28} %argrw{"wrr"}
	compref		$tmp507 result $const2 	%argrw{"wrr"}
	add		$tmp508 $tmp506 $tmp507 	%argrw{"wrr"}
	compref		$tmp509 result $const3 	%argrw{"wrr"}
	add		$tmp510 $tmp508 $tmp509 	%argrw{"wrr"}
	mul		___306_f $tmp510 $const24 	%argrw{"wrr"}
	assign		$tmp505 ___306_f 	%line{29} %argrw{"wr"}
	sub		$tmp511 color2_bump color1_bump 	%filename{"E:/github/elaramax/Shaders/max_noise.osl"} %line{221} %argrw{"wrr"}
	mul		$tmp512 $tmp505 $tmp511 	%argrw{"wrr"}
	add		$tmp513 $tmp504 $tmp512 	%argrw{"wrr"}
	add		result_bump $tmp513 color1_bump 	%argrw{"wrr"}
	sub		$tmp514 ___392_b ___392_a 	%line{225} %argrw{"wrr"}
	mul		result_bump ___392_np $tmp514 	%argrw{"wrr"}
	end
