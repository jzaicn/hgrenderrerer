OpenShadingLanguage 1.00
# Compiled by oslc 1.7.2
# options: 
shader max_bitmap
param	string	tex_fileName	""		%read{7,152} %write{2147483647,-1} %derivs
param	point	tex_coords	0 0 0		%read{1,2} %write{2147483647,-1} %derivs
param	int	tex_filtering	0		%read{106,121} %write{2147483647,-1}
param	float	tex_clipu	0		%read{41,76} %write{2147483647,-1} %derivs
param	float	tex_clipv	0		%read{43,90} %write{2147483647,-1} %derivs
param	float	tex_clipw	1		%read{42,75} %write{2147483647,-1} %derivs
param	float	tex_cliph	1		%read{43,92} %write{2147483647,-1} %derivs
param	float	blur	0		%read{2147483647,-1} %write{2147483647,-1}
param	int	tex_apply	1		%read{37,37} %write{2147483647,-1}
param	int	tex_cropPlace	0		%read{39,39} %write{2147483647,-1}
param	int	tex_monoOutput	0		%read{2147483647,-1} %write{2147483647,-1}
param	int	tex_rgbOutput	0		%read{144,144} %write{2147483647,-1}
param	int	tex_alphaSource	2		%read{128,141} %write{2147483647,-1}
param	int	tex_preMultAlpha	1		%read{147,147} %write{2147483647,-1}
oparam	color	result	0 0 0		%read{134,190} %write{0,183} %derivs
oparam	vector	result_bump	0 0 0		%read{2147483647,-1} %write{221,221}
oparam	float	result_alpha	1		%read{146,149} %write{64,150} %derivs
global	vector	dPdu	%read{216,216} %write{2147483647,-1}
global	vector	dPdv	%read{219,219} %write{2147483647,-1}
local	float	___306_f	%read{140,193} %write{139,192} %derivs
local	float	___315_dfdx	%read{206,211} %write{195,195}
local	float	___315_dfdy	%read{207,210} %write{196,196}
local	float	___315_dsdx	%read{201,210} %write{197,197}
local	float	___315_dsdy	%read{202,211} %write{198,198}
local	float	___315_dtdx	%read{202,207} %write{199,199}
local	float	___315_dtdy	%read{201,206} %write{200,200}
local	float	___315_dt	%read{204,213} %write{203,203}
local	float	___318_fcolor	%read{195,196} %write{193,193} %derivs
local	float	___318_dfds	%read{218,218} %write{209,214}
local	float	___318_dfdt	%read{220,220} %write{213,215}
local	float	mu	%read{17,198} %write{1,98} %derivs
local	float	mv	%read{9,184} %write{2,99} %derivs
local	float	texFilterWidth	%read{111,126} %write{3,6} %derivs
local	float	___368_fu	%read{70,98} %write{30,30} %derivs
local	float	___368_fv	%read{83,99} %write{35,35} %derivs
local	int	___368_needtexmap	%read{100,100} %write{36,65}
local	float	___370_u0	%read{46,66} %write{41,41} %derivs
local	float	___370_u1	%read{54,54} %write{42,42}
local	float	___370_v0	%read{49,68} %write{44,44} %derivs
local	float	___370_v1	%read{59,59} %write{45,45}
local	float	___374_fileAlpha	%read{143,143} %write{101,111} %derivs
local	int	___374_fileNumChannels	%read{104,112} %write{102,103}
local	float	___381_gray_channel	%read{127,127} %write{120,126} %derivs
local	int	___367_nativeFormat	%read{153,166} %write{151,152}
local	float	___391_texture_gamma	%read{173,182} %write{170,171} %derivs
const	color	$const1	0 0 0		%read{0,63} %write{2147483647,-1}
const	int	$const2	0		%read{1,215} %write{2147483647,-1}
const	int	$const3	1		%read{2,188} %write{2147483647,-1}
const	float	$const4	1		%read{3,184} %write{2147483647,-1}
temp	int	$tmp1	%read{5,5} %write{4,4}
const	string	$const5	"eye"		%read{4,4} %write{2147483647,-1}
const	float	$const6	0.050000001		%read{6,6} %write{2147483647,-1}
const	string	$const7	""		%read{7,7} %write{2147483647,-1}
temp	int	$tmp2	%read{8,8} %write{7,7}
const	float	$const8	0		%read{9,126} %write{2147483647,-1}
temp	int	$tmp3	%read{10,10} %write{9,9}
temp	int	$tmp4	%read{11,15} %write{10,14}
temp	int	$tmp5	%read{13,13} %write{12,12}
temp	int	$tmp6	%read{14,14} %write{13,13}
temp	int	$tmp7	%read{16,20} %write{15,19}
temp	int	$tmp8	%read{18,18} %write{17,17}
temp	int	$tmp9	%read{19,19} %write{18,18}
temp	int	$tmp10	%read{21,25} %write{20,24}
temp	int	$tmp11	%read{23,23} %write{22,22}
temp	int	$tmp12	%read{24,24} %write{23,23}
temp	int	$tmp13	%read{28,28} %write{26,26} %derivs
temp	int	$tmp14	%read{28,28} %write{27,27} %derivs
temp	int	$tmp15	%read{29,29} %write{28,28} %derivs
temp	float	$tmp16	%read{30,30} %write{29,29} %derivs
temp	int	$tmp17	%read{33,33} %write{31,31} %derivs
temp	int	$tmp18	%read{33,33} %write{32,32} %derivs
temp	int	$tmp19	%read{34,34} %write{33,33} %derivs
temp	float	$tmp20	%read{35,35} %write{34,34} %derivs
temp	int	$tmp21	%read{38,38} %write{37,37}
temp	int	$tmp22	%read{40,40} %write{39,39}
temp	float	$tmp23	%read{44,44} %write{43,43} %derivs
temp	int	$tmp24	%read{47,47} %write{46,46}
temp	int	$tmp25	%read{48,52} %write{47,51}
temp	int	$tmp26	%read{50,50} %write{49,49}
temp	int	$tmp27	%read{51,51} %write{50,50}
temp	int	$tmp28	%read{53,57} %write{52,56}
temp	int	$tmp29	%read{55,55} %write{54,54}
temp	int	$tmp30	%read{56,56} %write{55,55}
temp	int	$tmp31	%read{58,62} %write{57,61}
temp	int	$tmp32	%read{60,60} %write{59,59}
temp	int	$tmp33	%read{61,61} %write{60,60}
temp	float	$tmp34	%read{67,67} %write{66,66} %derivs
temp	float	$tmp35	%read{69,69} %write{68,68} %derivs
temp	float	$tmp36	%read{71,71} %write{70,70} %derivs
temp	float	$tmp37	%read{80,80} %write{71,71} %derivs
temp	float	$tmp38	%read{73,73} %write{72,72} %derivs
temp	float	$tmp39	%read{74,74} %write{73,73} %derivs
temp	int	$tmp40	%read{78,78} %write{74,74} %derivs
temp	float	$tmp41	%read{76,76} %write{75,75} %derivs
temp	float	$tmp42	%read{77,77} %write{76,76} %derivs
temp	int	$tmp43	%read{78,78} %write{77,77} %derivs
temp	int	$tmp44	%read{79,79} %write{78,78} %derivs
temp	float	$tmp45	%read{80,80} %write{79,79} %derivs
temp	float	$tmp46	%read{82,82} %write{81,81} %derivs
temp	float	$tmp47	%read{84,84} %write{82,82} %derivs
temp	float	$tmp48	%read{84,84} %write{83,83} %derivs
temp	float	$tmp49	%read{97,97} %write{84,84} %derivs
temp	float	$tmp50	%read{86,86} %write{85,85} %derivs
temp	float	$tmp51	%read{88,88} %write{86,86} %derivs
temp	float	$tmp52	%read{88,88} %write{87,87} %derivs
temp	float	$tmp53	%read{89,89} %write{88,88} %derivs
temp	int	$tmp54	%read{95,95} %write{89,89} %derivs
temp	float	$tmp55	%read{91,91} %write{90,90} %derivs
temp	float	$tmp56	%read{93,93} %write{91,91} %derivs
temp	float	$tmp57	%read{93,93} %write{92,92} %derivs
temp	float	$tmp58	%read{94,94} %write{93,93} %derivs
temp	int	$tmp59	%read{95,95} %write{94,94} %derivs
temp	int	$tmp60	%read{96,96} %write{95,95} %derivs
temp	float	$tmp61	%read{97,97} %write{96,96} %derivs
const	int	$const9	3		%read{102,156} %write{2147483647,-1}
temp	int	$tmp62	%read{2147483647,-1} %write{103,103}
const	string	$const10	"channels"		%read{103,103} %write{2147483647,-1}
const	int	$const11	4		%read{104,161} %write{2147483647,-1}
temp	int	$tmp63	%read{105,105} %write{104,104}
const	int	$const12	2		%read{106,190} %write{2147483647,-1}
temp	int	$tmp64	%read{107,107} %write{106,106}
temp	float	$tmp65	%read{109,109} %write{108,108} %derivs
const	string	$const13	"width"		%read{109,126} %write{2147483647,-1}
const	string	$const14	"blur"		%read{109,126} %write{2147483647,-1}
const	string	$const15	"swrap"		%read{109,126} %write{2147483647,-1}
const	string	$const16	"clamp"		%read{109,126} %write{2147483647,-1}
const	string	$const17	"twrap"		%read{109,126} %write{2147483647,-1}
const	string	$const18	"alpha"		%read{109,111} %write{2147483647,-1}
temp	float	$tmp66	%read{111,111} %write{110,110} %derivs
temp	int	$tmp67	%read{113,113} %write{112,112}
temp	int	$tmp68	%read{115,115} %write{114,114}
temp	float	$tmp69	%read{117,117} %write{116,116} %derivs
temp	float	$tmp70	%read{119,119} %write{118,118} %derivs
temp	int	$tmp71	%read{122,122} %write{121,121}
temp	float	$tmp72	%read{124,124} %write{123,123} %derivs
temp	float	$tmp73	%read{126,126} %write{125,125} %derivs
temp	int	$tmp74	%read{129,129} %write{128,128}
temp	int	$tmp75	%read{132,132} %write{131,131}
const	string	$const19	"intensity"		%read{133,186} %write{2147483647,-1}
temp	float	$tmp76	%read{136,136} %write{134,134} %derivs
temp	float	$tmp77	%read{136,136} %write{135,135} %derivs
temp	float	$tmp78	%read{138,138} %write{136,136} %derivs
temp	float	$tmp79	%read{138,138} %write{137,137} %derivs
temp	float	$tmp80	%read{139,139} %write{138,138} %derivs
const	float	$const20	0.33333334		%read{139,192} %write{2147483647,-1}
temp	int	$tmp81	%read{142,142} %write{141,141}
temp	int	$tmp82	%read{145,145} %write{144,144}
temp	int	$tmp83	%read{148,148} %write{147,147}
temp	int	$tmp84	%read{2147483647,-1} %write{152,152}
const	string	$const21	"format"		%read{152,152} %write{2147483647,-1}
temp	int	$tmp85	%read{154,154} %write{153,153}
temp	int	$tmp86	%read{155,159} %write{154,158}
temp	int	$tmp87	%read{157,157} %write{156,156}
temp	int	$tmp88	%read{158,158} %write{157,157}
temp	int	$tmp89	%read{160,164} %write{159,163}
temp	int	$tmp90	%read{162,162} %write{161,161}
temp	int	$tmp91	%read{163,163} %write{162,162}
temp	int	$tmp92	%read{165,169} %write{164,168}
const	int	$const22	5		%read{166,166} %write{2147483647,-1}
temp	int	$tmp93	%read{167,167} %write{166,166}
temp	int	$tmp94	%read{168,168} %write{167,167}
temp	int	$tmp95	%read{2147483647,-1} %write{171,171}
const	string	$const23	"options"		%read{171,171} %write{2147483647,-1}
const	string	$const24	"texture_gamma"		%read{171,171} %write{2147483647,-1}
const	string	$const25	"ei_degamma"		%read{172,172} %write{2147483647,-1}
temp	int	$tmp96	%read{174,174} %write{173,173}
temp	float	$tmp97	%read{177,177} %write{176,176} %derivs
temp	float	$tmp98	%read{176,176} %write{175,175} %derivs
temp	float	$tmp99	%read{180,180} %write{179,179} %derivs
temp	float	$tmp100	%read{179,179} %write{178,178} %derivs
temp	float	$tmp101	%read{183,183} %write{182,182} %derivs
temp	float	$tmp102	%read{182,182} %write{181,181} %derivs
temp	float	$tmp103	%read{199,200} %write{184,184} %derivs
const	string	$const26	"max_calculatebump"		%read{185,185} %write{2147483647,-1}
temp	float	$tmp104	%read{189,189} %write{187,187} %derivs
temp	float	$tmp105	%read{189,189} %write{188,188} %derivs
temp	float	$tmp106	%read{191,191} %write{189,189} %derivs
temp	float	$tmp107	%read{191,191} %write{190,190} %derivs
temp	float	$tmp108	%read{192,192} %write{191,191} %derivs
const	string	$const27	"Df2"		%read{194,194} %write{2147483647,-1}
temp	float	$tmp109	%read{203,203} %write{201,201}
temp	float	$tmp110	%read{203,203} %write{202,202}
temp	int	$tmp111	%read{205,205} %write{204,204}
temp	float	$tmp112	%read{208,208} %write{206,206}
temp	float	$tmp113	%read{208,208} %write{207,207}
temp	float	$tmp114	%read{209,209} %write{208,208}
temp	float	$tmp115	%read{212,212} %write{210,210}
temp	float	$tmp116	%read{212,212} %write{211,211}
temp	float	$tmp117	%read{213,213} %write{212,212}
temp	vector	$tmp118	%read{217,217} %write{216,216}
temp	vector	$tmp119	%read{218,218} %write{217,217}
temp	vector	$tmp120	%read{221,221} %write{218,218}
temp	vector	$tmp121	%read{220,220} %write{219,219}
temp	vector	$tmp122	%read{221,221} %write{220,220}
code ___main___
	assign		result $const1 	%filename{"E:/github/elaramax/Shaders/max_bitmap.osl"} %line{59} %argrw{"wr"}
	compref		mu tex_coords $const2 	%line{61} %argrw{"wrr"}
	compref		mv tex_coords $const3 	%line{62} %argrw{"wrr"}
	assign		texFilterWidth $const4 	%line{63} %argrw{"wr"}
	raytype		$tmp1 $const5 	%line{64} %argrw{"wr"}
	if		$tmp1 7 7 	%argrw{"r"}
	assign		texFilterWidth $const6 	%line{66} %argrw{"wr"}
	neq		$tmp2 tex_fileName $const7 	%line{69} %argrw{"wrr"}
	if		$tmp2 184 184 	%argrw{"r"}
	ge		$tmp3 mv $const8 	%line{71} %argrw{"wrr"}
	neq		$tmp4 $tmp3 $const2 	%argrw{"wrr"}
	if		$tmp4 15 15 	%argrw{"r"}
	le		$tmp5 mv $const4 	%argrw{"wrr"}
	neq		$tmp6 $tmp5 $const2 	%argrw{"wrr"}
	assign		$tmp4 $tmp6 	%argrw{"wr"}
	neq		$tmp7 $tmp4 $const2 	%argrw{"wrr"}
	if		$tmp7 20 20 	%argrw{"r"}
	ge		$tmp8 mu $const8 	%argrw{"wrr"}
	neq		$tmp9 $tmp8 $const2 	%argrw{"wrr"}
	assign		$tmp7 $tmp9 	%argrw{"wr"}
	neq		$tmp10 $tmp7 $const2 	%argrw{"wrr"}
	if		$tmp10 25 25 	%argrw{"r"}
	le		$tmp11 mu $const4 	%argrw{"wrr"}
	neq		$tmp12 $tmp11 $const2 	%argrw{"wrr"}
	assign		$tmp10 $tmp12 	%argrw{"wr"}
	if		$tmp10 150 151 	%argrw{"r"}
	assign		$tmp13 mu 	%line{73} %argrw{"wr"}
	lt		$tmp14 mu $const8 	%argrw{"wrr"}
	sub		$tmp15 $tmp13 $tmp14 	%argrw{"wrr"}
	assign		$tmp16 $tmp15 	%argrw{"wr"}
	sub		___368_fu mu $tmp16 	%argrw{"wrr"}
	assign		$tmp17 mv 	%line{74} %argrw{"wr"}
	lt		$tmp18 mv $const8 	%argrw{"wrr"}
	sub		$tmp19 $tmp17 $tmp18 	%argrw{"wrr"}
	assign		$tmp20 $tmp19 	%argrw{"wr"}
	sub		___368_fv mv $tmp20 	%argrw{"wrr"}
	assign		___368_needtexmap $const3 	%line{75} %argrw{"wr"}
	eq		$tmp21 tex_apply $const3 	%line{77} %argrw{"wrr"}
	if		$tmp21 98 100 	%argrw{"r"}
	eq		$tmp22 tex_cropPlace $const3 	%line{79} %argrw{"wrr"}
	if		$tmp22 70 98 	%argrw{"r"}
	assign		___370_u0 tex_clipu 	%line{81} %argrw{"wr"}
	add		___370_u1 tex_clipu tex_clipw 	%line{82} %argrw{"wrr"}
	add		$tmp23 tex_clipv tex_cliph 	%line{84} %argrw{"wrr"}
	sub		___370_v0 $const4 $tmp23 	%argrw{"wrr"}
	sub		___370_v1 $const4 tex_clipv 	%line{85} %argrw{"wrr"}
	lt		$tmp24 mu ___370_u0 	%line{87} %argrw{"wrr"}
	neq		$tmp25 $tmp24 $const2 	%argrw{"wrr"}
	if		$tmp25 49 52 	%argrw{"r"}
	lt		$tmp26 mv ___370_v0 	%argrw{"wrr"}
	neq		$tmp27 $tmp26 $const2 	%argrw{"wrr"}
	assign		$tmp25 $tmp27 	%argrw{"wr"}
	neq		$tmp28 $tmp25 $const2 	%argrw{"wrr"}
	if		$tmp28 54 57 	%argrw{"r"}
	gt		$tmp29 mu ___370_u1 	%argrw{"wrr"}
	neq		$tmp30 $tmp29 $const2 	%argrw{"wrr"}
	assign		$tmp28 $tmp30 	%argrw{"wr"}
	neq		$tmp31 $tmp28 $const2 	%argrw{"wrr"}
	if		$tmp31 59 62 	%argrw{"r"}
	gt		$tmp32 mv ___370_v1 	%argrw{"wrr"}
	neq		$tmp33 $tmp32 $const2 	%argrw{"wrr"}
	assign		$tmp31 $tmp33 	%argrw{"wr"}
	if		$tmp31 66 66 	%argrw{"r"}
	assign		result $const1 	%line{89} %argrw{"wr"}
	assign		result_alpha $const2 	%line{90} %argrw{"wr"}
	assign		___368_needtexmap $const2 	%line{91} %argrw{"wr"}
	sub		$tmp34 mu ___370_u0 	%line{94} %argrw{"wrr"}
	div		mu $tmp34 tex_clipw 	%argrw{"wrr"}
	sub		$tmp35 mv ___370_v0 	%line{95} %argrw{"wrr"}
	div		mv $tmp35 tex_cliph 	%argrw{"wrr"}
	mul		$tmp36 ___368_fu tex_clipw 	%line{99} %argrw{"wrr"}
	add		$tmp37 tex_clipu $tmp36 	%argrw{"wrr"}
	mul		$tmp38 ___368_fu tex_clipw 	%argrw{"wrr"}
	add		$tmp39 tex_clipu $tmp38 	%argrw{"wrr"}
	assign		$tmp40 $tmp39 	%argrw{"wr"}
	mul		$tmp41 ___368_fu tex_clipw 	%argrw{"wrr"}
	add		$tmp42 tex_clipu $tmp41 	%argrw{"wrr"}
	lt		$tmp43 $tmp42 $const8 	%argrw{"wrr"}
	sub		$tmp44 $tmp40 $tmp43 	%argrw{"wrr"}
	assign		$tmp45 $tmp44 	%argrw{"wr"}
	sub		mu $tmp37 $tmp45 	%argrw{"wrr"}
	sub		$tmp46 $const4 tex_clipv 	%line{100} %argrw{"wrr"}
	sub		$tmp47 $tmp46 tex_cliph 	%argrw{"wrr"}
	mul		$tmp48 ___368_fv tex_cliph 	%argrw{"wrr"}
	add		$tmp49 $tmp47 $tmp48 	%argrw{"wrr"}
	sub		$tmp50 $const4 tex_clipv 	%argrw{"wrr"}
	sub		$tmp51 $tmp50 tex_cliph 	%argrw{"wrr"}
	mul		$tmp52 ___368_fv tex_cliph 	%argrw{"wrr"}
	add		$tmp53 $tmp51 $tmp52 	%argrw{"wrr"}
	assign		$tmp54 $tmp53 	%argrw{"wr"}
	sub		$tmp55 $const4 tex_clipv 	%argrw{"wrr"}
	sub		$tmp56 $tmp55 tex_cliph 	%argrw{"wrr"}
	mul		$tmp57 ___368_fv tex_cliph 	%argrw{"wrr"}
	add		$tmp58 $tmp56 $tmp57 	%argrw{"wrr"}
	lt		$tmp59 $tmp58 $const8 	%argrw{"wrr"}
	sub		$tmp60 $tmp54 $tmp59 	%argrw{"wrr"}
	assign		$tmp61 $tmp60 	%argrw{"wr"}
	sub		mv $tmp49 $tmp61 	%argrw{"wrr"}
	assign		mu ___368_fu 	%line{105} %argrw{"wr"}
	assign		mv ___368_fv 	%line{106} %argrw{"wr"}
	if		___368_needtexmap 150 150 	%line{109} %argrw{"r"}
	assign		___374_fileAlpha $const3 	%line{111} %argrw{"wr"}
	assign		___374_fileNumChannels $const9 	%line{113} %argrw{"wr"}
	gettextureinfo	$tmp62 tex_fileName $const10 ___374_fileNumChannels 	%line{114} %argrw{"wrrw"}
	ge		$tmp63 ___374_fileNumChannels $const11 	%line{116} %argrw{"wrr"}
	if		$tmp63 112 128 	%argrw{"r"}
	eq		$tmp64 tex_filtering $const12 	%line{119} %argrw{"wrr"}
	if		$tmp64 110 112 	%argrw{"r"}
	sub		$tmp65 $const4 mv 	%line{124} %argrw{"wrr"}
	texture		result tex_fileName mu $tmp65 $const13 $const8 $const14 $const8 $const15 $const16 $const17 $const16 $const18 ___374_fileAlpha 	%line{129} %argrw{"wrrrrrrrrrrrrw"} %argderivs{2,3}
	sub		$tmp66 $const4 mv 	%line{136} %argrw{"wrr"}
	texture		result tex_fileName mu $tmp66 $const13 texFilterWidth $const14 $const8 $const15 $const16 $const17 $const16 $const18 ___374_fileAlpha 	%line{141} %argrw{"wrrrrrrrrrrrrw"} %argderivs{2,3}
	eq		$tmp67 ___374_fileNumChannels $const9 	%line{144} %argrw{"wrr"}
	if		$tmp67 120 128 	%argrw{"r"}
	eq		$tmp68 tex_filtering $const12 	%line{147} %argrw{"wrr"}
	if		$tmp68 118 120 	%argrw{"r"}
	sub		$tmp69 $const4 mv 	%line{152} %argrw{"wrr"}
	texture		result tex_fileName mu $tmp69 $const13 $const8 $const14 $const8 $const15 $const16 $const17 $const16 	%line{156} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	sub		$tmp70 $const4 mv 	%line{163} %argrw{"wrr"}
	texture		result tex_fileName mu $tmp70 $const13 texFilterWidth $const14 $const8 $const15 $const16 $const17 $const16 	%line{167} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	assign		___381_gray_channel $const2 	%line{173} %argrw{"wr"}
	eq		$tmp71 tex_filtering $const12 	%line{174} %argrw{"wrr"}
	if		$tmp71 125 127 	%argrw{"r"}
	sub		$tmp72 $const4 mv 	%line{179} %argrw{"wrr"}
	texture		___381_gray_channel tex_fileName mu $tmp72 $const13 $const8 $const14 $const8 $const15 $const16 $const17 $const16 	%line{183} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	sub		$tmp73 $const4 mv 	%line{190} %argrw{"wrr"}
	texture		___381_gray_channel tex_fileName mu $tmp73 $const13 texFilterWidth $const14 $const8 $const15 $const16 $const17 $const16 	%line{194} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	assign		result ___381_gray_channel 	%line{197} %argrw{"wr"}
	eq		$tmp74 tex_alphaSource $const12 	%line{200} %argrw{"wrr"}
	if		$tmp74 131 144 	%argrw{"r"}
	assign		result_alpha $const3 	%line{202} %argrw{"wr"}
	eq		$tmp75 tex_alphaSource $const3 	%line{204} %argrw{"wrr"}
	if		$tmp75 141 144 	%argrw{"r"}
	functioncall	$const19 141 	%line{206} %argrw{"r"}
	compref		$tmp76 result $const2 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{28} %argrw{"wrr"}
	compref		$tmp77 result $const3 	%argrw{"wrr"}
	add		$tmp78 $tmp76 $tmp77 	%argrw{"wrr"}
	compref		$tmp79 result $const12 	%argrw{"wrr"}
	add		$tmp80 $tmp78 $tmp79 	%argrw{"wrr"}
	mul		___306_f $tmp80 $const20 	%argrw{"wrr"}
	assign		result_alpha ___306_f 	%line{29} %argrw{"wr"}
	eq		$tmp81 tex_alphaSource $const2 	%filename{"E:/github/elaramax/Shaders/max_bitmap.osl"} %line{208} %argrw{"wrr"}
	if		$tmp81 144 144 	%argrw{"r"}
	assign		result_alpha ___374_fileAlpha 	%line{210} %argrw{"wr"}
	eq		$tmp82 tex_rgbOutput $const3 	%line{213} %argrw{"wrr"}
	if		$tmp82 147 150 	%argrw{"r"}
	assign		result result_alpha 	%line{215} %argrw{"wr"}
	eq		$tmp83 tex_preMultAlpha $const2 	%line{219} %argrw{"wrr"}
	if		$tmp83 150 150 	%argrw{"r"}
	mul		result result result_alpha 	%line{221} %argrw{"wrr"}
	assign		result_alpha $const2 	%line{228} %argrw{"wr"}
	assign		___367_nativeFormat $const2 	%line{231} %argrw{"wr"}
	gettextureinfo	$tmp84 tex_fileName $const21 ___367_nativeFormat 	%line{232} %argrw{"wrrw"}
	eq		$tmp85 ___367_nativeFormat $const12 	%line{237} %argrw{"wrr"}
	neq		$tmp86 $tmp85 $const2 	%argrw{"wrr"}
	if		$tmp86 156 159 	%argrw{"r"}
	eq		$tmp87 ___367_nativeFormat $const9 	%argrw{"wrr"}
	neq		$tmp88 $tmp87 $const2 	%argrw{"wrr"}
	assign		$tmp86 $tmp88 	%argrw{"wr"}
	neq		$tmp89 $tmp86 $const2 	%argrw{"wrr"}
	if		$tmp89 161 164 	%line{238} %argrw{"r"}
	eq		$tmp90 ___367_nativeFormat $const11 	%argrw{"wrr"}
	neq		$tmp91 $tmp90 $const2 	%argrw{"wrr"}
	assign		$tmp89 $tmp91 	%argrw{"wr"}
	neq		$tmp92 $tmp89 $const2 	%argrw{"wrr"}
	if		$tmp92 166 169 	%argrw{"r"}
	eq		$tmp93 ___367_nativeFormat $const22 	%argrw{"wrr"}
	neq		$tmp94 $tmp93 $const2 	%argrw{"wrr"}
	assign		$tmp92 $tmp94 	%argrw{"wr"}
	if		$tmp92 184 184 	%line{237} %argrw{"r"}
	assign		___391_texture_gamma $const4 	%line{240} %argrw{"wr"}
	getattribute	$tmp95 $const23 $const24 ___391_texture_gamma 	%line{241} %argrw{"wrrw"}
	functioncall	$const25 184 	%line{243} %argrw{"r"}
	neq		$tmp96 ___391_texture_gamma $const4 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{411} %argrw{"wrr"}
	if		$tmp96 184 184 	%argrw{"r"}
	compref		$tmp98 result $const2 	%line{413} %argrw{"wrr"}
	pow		$tmp97 $tmp98 ___391_texture_gamma 	%argrw{"wrr"}
	compassign	result $const2 $tmp97 	%argrw{"wrr"}
	compref		$tmp100 result $const3 	%line{414} %argrw{"wrr"}
	pow		$tmp99 $tmp100 ___391_texture_gamma 	%argrw{"wrr"}
	compassign	result $const3 $tmp99 	%argrw{"wrr"}
	compref		$tmp102 result $const12 	%line{415} %argrw{"wrr"}
	pow		$tmp101 $tmp102 ___391_texture_gamma 	%argrw{"wrr"}
	compassign	result $const12 $tmp101 	%argrw{"wrr"}
	sub		$tmp103 $const4 mv 	%filename{"E:/github/elaramax/Shaders/max_bitmap.osl"} %line{247} %argrw{"wrr"}
	functioncall	$const26 222 	%argrw{"r"}
	functioncall	$const19 194 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{124} %argrw{"r"}
	compref		$tmp104 result $const2 	%line{28} %argrw{"wrr"}
	compref		$tmp105 result $const3 	%argrw{"wrr"}
	add		$tmp106 $tmp104 $tmp105 	%argrw{"wrr"}
	compref		$tmp107 result $const12 	%argrw{"wrr"}
	add		$tmp108 $tmp106 $tmp107 	%argrw{"wrr"}
	mul		___306_f $tmp108 $const20 	%argrw{"wrr"}
	assign		___318_fcolor ___306_f 	%line{29} %argrw{"wr"}
	functioncall	$const27 216 	%line{126} %argrw{"r"}
	Dx		___315_dfdx ___318_fcolor 	%line{103} %argrw{"wr"} %argderivs{1}
	Dy		___315_dfdy ___318_fcolor 	%line{104} %argrw{"wr"} %argderivs{1}
	Dx		___315_dsdx mu 	%line{105} %argrw{"wr"} %argderivs{1}
	Dy		___315_dsdy mu 	%line{106} %argrw{"wr"} %argderivs{1}
	Dx		___315_dtdx $tmp103 	%line{107} %argrw{"wr"} %argderivs{1}
	Dy		___315_dtdy $tmp103 	%line{108} %argrw{"wr"} %argderivs{1}
	mul		$tmp109 ___315_dsdx ___315_dtdy 	%line{109} %argrw{"wrr"}
	mul		$tmp110 ___315_dtdx ___315_dsdy 	%argrw{"wrr"}
	sub		___315_dt $tmp109 $tmp110 	%argrw{"wrr"}
	neq		$tmp111 ___315_dt $const2 	%line{110} %argrw{"wrr"}
	if		$tmp111 214 216 	%argrw{"r"}
	mul		$tmp112 ___315_dtdy ___315_dfdx 	%line{112} %argrw{"wrr"}
	mul		$tmp113 ___315_dtdx ___315_dfdy 	%argrw{"wrr"}
	sub		$tmp114 $tmp112 $tmp113 	%argrw{"wrr"}
	div		___318_dfds $tmp114 ___315_dt 	%argrw{"wrr"}
	mul		$tmp115 ___315_dsdx ___315_dfdy 	%line{113} %argrw{"wrr"}
	mul		$tmp116 ___315_dsdy ___315_dfdx 	%argrw{"wrr"}
	sub		$tmp117 $tmp115 $tmp116 	%argrw{"wrr"}
	div		___318_dfdt $tmp117 ___315_dt 	%argrw{"wrr"}
	assign		___318_dfds $const2 	%line{117} %argrw{"wr"}
	assign		___318_dfdt $const2 	%line{118} %argrw{"wr"}
	normalize	$tmp118 dPdu 	%line{127} %argrw{"wr"}
	neg		$tmp119 $tmp118 	%argrw{"wr"}
	mul		$tmp120 $tmp119 ___318_dfds 	%argrw{"wrr"}
	normalize	$tmp121 dPdv 	%argrw{"wr"}
	mul		$tmp122 $tmp121 ___318_dfdt 	%argrw{"wrr"}
	add		result_bump $tmp120 $tmp122 	%argrw{"wrr"}
	end
